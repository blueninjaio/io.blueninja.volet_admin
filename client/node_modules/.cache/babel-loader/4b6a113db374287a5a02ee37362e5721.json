{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Merchants/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passedFromChild = (i, state) => {\n      let arr = this.state.sendData;\n      let send = this.state.sendState;\n      this.setState({\n        sendData: arr\n      });\n      this.setState({\n        sendState: send\n      });\n      console.log(this.state.sendData);\n      console.log(this.state.sendState);\n    };\n\n    this.fetchAllMerchants = () => {\n      fetch(\"\".concat(url, \"/api/merchants\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let merchants = [];\n          data.merchants.map(x => {\n            let merchant = {\n              f_name: x.f_name,\n              l_name: x.l_name,\n              email: x.email,\n              contact: x.contact,\n              dateCreated: x.dateCreated\n            };\n            merchants.push(merchant);\n          });\n          this.setState({\n            merchants\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for merchants page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.toggle = async () => {\n      await this.setState({\n        isChecked: !this.state.isChecked\n      });\n      console.log(this.state.isChecked);\n\n      if (!this.state.isChecked) {\n        console.log(\"Users Page\");\n      } else if (this.state.isChecked) {\n        setTimeout(() => {\n          this.props.history.push(\"/useragent\");\n        }, 400);\n      }\n    };\n\n    this.state = {\n      isChecked: false,\n      filterUsers: \"all\",\n      merchants: [],\n      sendState: false,\n      sendData: null\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | receives and sets state \n    selected row data from the Table component\n  |--------------------------------------------------\n  */\n\n\n  /**\n  |--------------------------------------------------\n  | On page load, fetch from api\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.fetchAllMerchants();\n  }\n  /**\n  |--------------------------------------------------\n  | Fetches data from Api and stores in an array\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"table-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Merchants\")), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingTop: \"13rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadBusiness,\n      body: this.state.merchants,\n      method: this.passedFromChild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Merchants/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","passedFromChild","i","state","arr","sendData","send","sendState","setState","console","log","fetchAllMerchants","fetch","method","mode","headers","Accept","then","res","json","success","merchants","map","x","merchant","f_name","l_name","email","contact","dateCreated","push","catch","err","alert","text","onClick","cancelable","toggle","isChecked","setTimeout","history","filterUsers","componentDidMount","render","paddingTop","tHeadBusiness"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n      filterUsers: \"all\",\n      merchants: [],\n      sendState: false,\n      sendData: null\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | receives and sets state \n    selected row data from the Table component\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    let arr = this.state.sendData;\n    let send = this.state.sendState;\n\n    this.setState({ sendData: arr });\n    this.setState({ sendState: send });\n\n    console.log(this.state.sendData);\n    console.log(this.state.sendState);\n  };\n\n  /**\n  |--------------------------------------------------\n  | On page load, fetch from api\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.fetchAllMerchants();\n  }\n\n  /**\n  |--------------------------------------------------\n  | Fetches data from Api and stores in an array\n  |--------------------------------------------------\n  */\n  fetchAllMerchants = () => {\n    fetch(`${url}/api/merchants`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let merchants = [];\n          data.merchants.map(x => {\n            let merchant = {\n              f_name: x.f_name,\n              l_name: x.l_name,\n              email: x.email,\n              contact: x.contact,\n              dateCreated: x.dateCreated\n            };\n            merchants.push(merchant);\n          });\n\n          this.setState({ merchants });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for merchants page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | changes state on toggle\n  |--------------------------------------------------\n  */\n  toggle = async () => {\n    await this.setState({ isChecked: !this.state.isChecked });\n    console.log(this.state.isChecked);\n    if (!this.state.isChecked) {\n      console.log(\"Users Page\");\n    } else if (this.state.isChecked) {\n      setTimeout(() => {\n        this.props.history.push(\"/useragent\");\n      }, 400);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-header\">\n          <h3 className=\"table-page-title\">Merchants</h3>\n        </div>\n\n        <div className=\"container-fluid\" style={{ paddingTop: \"13rem\" }}>\n          <Table\n            head={data.tHeadBusiness}\n            body={this.state.merchants}\n            method={this.passedFromChild}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}