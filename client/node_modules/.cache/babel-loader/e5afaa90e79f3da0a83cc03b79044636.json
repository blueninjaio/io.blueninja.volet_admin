{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Banks/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCategories = () => {\n      fetch(\"\".concat(url, \"/api/category\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let categories = [];\n          data.categories.map((x, i) => {\n            let cat = {\n              no: i,\n              title: x.title,\n              date: x.dateCreated\n            };\n            categories.push(cat);\n            return categories;\n          });\n          this.setState({\n            categories\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for business page, for fetching business types\", err);\n        alert(\"Error for business page, for fetching business types\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.passedFromChild = (i, state) => {\n      console.log(i);\n    };\n\n    this.onActionAddBank = async () => {\n      await this.setState({\n        popup: false\n      });\n      fetch(\"\".concat(url, \"/api/bank\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          description: this.state.description\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      popup: false,\n      categories: [],\n      name: \"\",\n      description: \"\"\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {} // this.fetchCategories();\n\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-modal-opacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      className: \"main-cat-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Banks\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary add-cat-btn\",\n      onClick: () => this.setState({\n        popup: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://png.pngtree.com/svg/20161118/6fc980719c.svg\",\n      alt: \"add-modal-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-popup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"cat-pop-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Add New Bank\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Enter a new bank name\",\n      className: \"form-control cat-pop-input\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Enter a new bank description\",\n      className: \"form-control cat-pop-input\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn cat-save-btn\",\n      onClick: () => this.onActionAddBank(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Add\"))) : null, React.createElement(\"div\", {\n      className: \"container-fluid mobile-container\",\n      style: {\n        paddingTop: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadBanksTable,\n      body: this.state.categories,\n      method: this.passedFromChild,\n      toggle: data.tBodyToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Banks/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","fetchCategories","fetch","method","mode","headers","Accept","then","res","json","success","categories","map","x","i","cat","no","title","date","dateCreated","push","setState","catch","err","console","log","alert","text","onClick","cancelable","passedFromChild","state","onActionAddBank","popup","body","JSON","stringify","name","description","message","window","location","reload","componentDidMount","render","e","target","value","paddingTop","tHeadBanksTable","tBodyToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popup: false,\n      categories: [],\n      name: \"\",\n      description: \"\"\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    // this.fetchCategories();\n  }\n\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n  fetchCategories = () => {\n    fetch(`${url}/api/category`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let categories = [];\n          data.categories.map((x, i) => {\n            let cat = {\n              no: i,\n              title: x.title,\n              date: x.dateCreated\n            };\n            categories.push(cat);\n            return categories;\n          });\n          this.setState({ categories });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Error for business page, for fetching business types\",\n          err\n        );\n\n        alert(\n          \"Error for business page, for fetching business types\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | method to use the state from the table and the row that is clicked\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(i);\n  };\n\n  /**\n  |--------------------------------------------------\n  | add a new bank\n  |--------------------------------------------------\n  */\n  onActionAddBank = async () => {\n    await this.setState({ popup: false });\n\n    fetch(`${url}/api/bank`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        description: this.state.description\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        {this.state.popup === true ? (\n          <div className=\"cat-modal-opacity\" />\n        ) : null}\n        <h3 className=\"main-cat-page-title\">Banks</h3>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary add-cat-btn\"\n          onClick={() => this.setState({ popup: true })}\n        >\n          <img\n            src=\"https://png.pngtree.com/svg/20161118/6fc980719c.svg\"\n            alt=\"add-modal-icon\"\n          />\n        </button>\n        {this.state.popup === true ? (\n          <div className=\"cat-popup-container\">\n            <div>\n              <h3 className=\"cat-pop-title\">Add New Bank</h3>\n            </div>\n            <div>\n              <input\n                placeholder=\"Enter a new bank name\"\n                className=\"form-control cat-pop-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ name: e.target.value })}\n              />\n              <input\n                placeholder=\"Enter a new bank description\"\n                className=\"form-control cat-pop-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ description: e.target.value })}\n              />\n              <button\n                className=\"btn cat-save-btn\"\n                onClick={() => this.onActionAddBank()}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"container-fluid mobile-container\"\n          style={{ paddingTop: \"7.5rem\" }}\n        >\n          <Table\n            head={data.tHeadBanksTable}\n            body={this.state.categories}\n            method={this.passedFromChild}\n            toggle={data.tBodyToggle}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}