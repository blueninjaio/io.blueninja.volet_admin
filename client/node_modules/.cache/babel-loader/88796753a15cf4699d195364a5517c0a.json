{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/Table/index.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config/index\";\n\nclass Row extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isButton: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Arr received: \", this.props.x); //this.props.isButton ? this.setState({ isButton: true }) : null;\n  }\n\n  render() {\n    if (this.state.isButton) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Button\");else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Not Button\"));\n  }\n\n}\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.approve = id => {\n      fetch(\"\".concat(url, \"/api/approve\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          id\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          console.log(\"Registration status: \", data.success);\n          alert(data.message);\n\n          if (data.success === true) {\n            window.location.reload();\n          }\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.renderRow = x => {\n      return React.createElement(Row, {\n        x: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }); // Object.values(x).map((y, i) => {\n      //   return (\n      //     <td\n      //       key={i}\n      //       style={{ width: this.props.head[i].width }}\n      //       className=\"table-data-mobile\"\n      //     >\n      //       {y}\n      //     </td>\n      //   );\n      // });\n    };\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Body:\", this.props.body);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table fixed-table-head table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        background: \"rgb(248,248,248)\",\n        color: \"rgb(204,204,204)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.head.map(x => React.createElement(\"th\", {\n      className: \"table-head-data-mobile\",\n      key: x.id,\n      style: {\n        width: x.width,\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, x.title))))), React.createElement(\"table\", {\n      className: \"table table-bordered user-table\",\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.props.body.map((x, i) => React.createElement(\"tr\", {\n      onClick: () => this.props.method(i, true),\n      key: i,\n      style: {\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.renderRow(x))))));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/Table/index.js"],"names":["React","Component","url","Row","constructor","props","state","isButton","componentDidMount","console","log","x","render","index","approve","id","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","data","success","alert","message","window","location","reload","catch","err","renderRow","w","bAccRow","columns","background","color","head","map","width","textAlign","border","title","fontSize","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config/index\";\n\nclass Row extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isButton: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Arr received: \", this.props.x);\n    //this.props.isButton ? this.setState({ isButton: true }) : null;\n  }\n\n  render() {\n    if (this.state.isButton) return <div>Button</div>;\n    else\n      return (\n        <div>\n          <p>Not Button</p>\n        </div>\n      );\n  }\n}\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Body:\", this.props.body);\n  }\n\n  approve = id => {\n    fetch(`${url}/api/approve`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        id\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          console.log(\"Registration status: \", data.success);\n          alert(data.message);\n\n          if (data.success === true) {\n            window.location.reload();\n          }\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  renderRow = x => {\n    return <Row x={x} />;\n\n    // Object.values(x).map((y, i) => {\n    //   return (\n    //     <td\n    //       key={i}\n    //       style={{ width: this.props.head[i].width }}\n    //       className=\"table-data-mobile\"\n    //     >\n    //       {y}\n    //     </td>\n    //   );\n    // });\n  };\n\n  render() {\n    return (\n      <div>\n        <table className=\"table fixed-table-head table-bordered\">\n          <thead>\n            <tr\n              style={{\n                background: \"rgb(248,248,248)\",\n                color: \"rgb(204,204,204)\"\n              }}\n            >\n              {this.props.head.map(x => (\n                <th\n                  className=\"table-head-data-mobile\"\n                  key={x.id}\n                  style={{ width: x.width, textAlign: \"center\", border: 0 }}\n                >\n                  {x.title}\n                </th>\n              ))}\n            </tr>\n          </thead>\n        </table>\n        <table\n          className=\"table table-bordered user-table\"\n          style={{ fontSize: 14 }}\n        >\n          <tbody>\n            {this.props.body.map((x, i) => (\n              <tr\n                onClick={() => this.props.method(i, true)}\n                key={i}\n                style={{\n                  textAlign: \"center\",\n                  border: 0\n                }}\n              >\n                {this.renderRow(x)}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}