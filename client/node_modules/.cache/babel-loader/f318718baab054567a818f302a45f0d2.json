{"ast":null,"code":"import _objectSpread from \"/Users/scott/Desktop/Client/io.blueninja.volet_admin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN, LOGOUT } from \"../actions/actionTypes\";\n/**\n|--------------------------------------------------\n| Initial State of login and logout\n|--------------------------------------------------\n*/\n\nexport const loginState = {\n  isLoggedIn: false,\n  isLoggedOut: true\n};\n/**\n|--------------------------------------------------\n| Action cases to listen to which is login and logout\n|--------------------------------------------------\n*/\n\nexport const login = (state = loginState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return _objectSpread({}, state, {\n        isLoggedIn: action.payload\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        isLoggedOut: action.payload\n      });\n\n    default:\n      {\n        break;\n      }\n  }\n\n  return state;\n};\nexport default login;","map":{"version":3,"sources":["/Users/scott/Desktop/Client/io.blueninja.volet_admin/client/src/reducers/loginState.js"],"names":["LOGIN","LOGOUT","loginState","isLoggedIn","isLoggedOut","login","state","action","type","payload"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,wBAA9B;AACA;;;;;;AAKA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAnB;AAKP;;;;;;AAKA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGJ,UAAT,EAAqBK,MAArB,KAAgC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAL;AACE,+BAAYM,KAAZ;AAAmBH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAAtC;;AACF,SAAKR,MAAL;AACE,+BAAYK,KAAZ;AAAmBF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAvC;;AACF;AAAS;AACP;AACD;AAPH;;AASA,SAAOH,KAAP;AACD,CAXM;AAaP,eAAeD,KAAf","sourcesContent":["import { LOGIN, LOGOUT } from \"../actions/actionTypes\";\n/**\n|--------------------------------------------------\n| Initial State of login and logout\n|--------------------------------------------------\n*/\nexport const loginState = {\n  isLoggedIn: false,\n  isLoggedOut: true\n};\n\n/**\n|--------------------------------------------------\n| Action cases to listen to which is login and logout\n|--------------------------------------------------\n*/\nexport const login = (state = loginState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, isLoggedIn: action.payload };\n    case LOGOUT:\n      return { ...state, isLoggedOut: action.payload };\n    default: {\n      break;\n    }\n  }\n  return state;\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}