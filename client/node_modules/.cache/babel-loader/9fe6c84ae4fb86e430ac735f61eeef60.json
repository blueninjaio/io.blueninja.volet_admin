{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/Table/index.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config\";\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onActionActivateToggle = (i, status) => {\n      console.log(status);\n      this.setState({\n        toggle: true\n      });\n      let ids = this.props.id;\n      let chosen = ids[i];\n      console.log(\"Toggle Activated\", chosen);\n      fetch(\"\".concat(url, \"/api/bank/toggle\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen,\n          isActive: true\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n        } else {\n          alert(data.message);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.onActionDeactivateToggle = i => {\n      this.setState({\n        toggle: false\n      });\n      let ids = this.props.id;\n      let chosen = ids[i];\n      console.log(\"Toggle Activated\", chosen);\n      fetch(\"\".concat(url, \"/api/bank/toggle\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen,\n          isActive: false\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        } else {\n          alert(data.message);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.approve = i => {\n      if (this.props.model === \"business\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/business/approve\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            _id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      } else if (this.props.model === \"agent\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/agents/approve\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.decline = i => {\n      if (this.props.model === \"business\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/business/decline\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            _id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      } else if (this.props.model === \"agent\") {\n        console.log(\"Hello\");\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/agents/decline\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onActionToggle = () => {};\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: [],\n      toggle: false,\n      isActive: false\n    };\n  }\n\n  componentDidMount() {\n    console.log();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table fixed-table-head table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        background: \"rgb(248,248,248)\",\n        color: \"rgb(204,204,204)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.props.head.map(x => React.createElement(\"th\", {\n      className: \"table-head-data-mobile\",\n      key: x.id,\n      style: {\n        width: x.width,\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, x.title))))), React.createElement(\"table\", {\n      className: \"table table-bordered user-table\",\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.props.body.map((x, i) => React.createElement(\"tr\", {\n      onClick: () => this.props.method(i, true),\n      key: i,\n      style: {\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, Object.values(x).map((y, i) => React.createElement(\"td\", {\n      key: i,\n      style: {\n        width: this.props.head[i].width\n      },\n      className: \"table-data-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, y)), this.props.button ? this.props.button.map((x, j) => React.createElement(\"td\", {\n      style: {\n        width: this.props.head[j].width\n      },\n      className: \"table-data-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, x.name === \"Approve\" ? React.createElement(\"button\", {\n      className: \"businessRequestApprove table-data-mobile\",\n      onClick: () => this.approve(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, x.name) : React.createElement(\"button\", {\n      className: \"businessRequestDecline table-data-mobile\",\n      onClick: () => this.decline(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, x.name))) : null, this.props.toggle ? this.props.toggle.map((x, w) => React.createElement(\"td\", {\n      key: x,\n      style: {\n        width: this.props.head[w].width\n      },\n      className: \"table-data-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, x.name === \"Activate\" ? React.createElement(\"div\", {\n      className: \"user-toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"switch-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"switch\",\n      onClick: () => this.onActionActivateToggle(i, true),\n      className: \"user\",\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }))))) : React.createElement(\"div\", {\n      className: \"user-toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"switch-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"switch\",\n      onClick: () => this.onActionActivateToggle(i, false),\n      className: \"user-agent\",\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }))))))) : null)))));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/Table/index.js"],"names":["React","Component","url","index","constructor","props","onActionActivateToggle","i","status","console","log","setState","toggle","ids","id","chosen","fetch","method","headers","Accept","body","JSON","stringify","_id","isActive","then","res","json","data","success","alert","message","catch","err","onActionDeactivateToggle","window","location","reload","approve","model","user_id","decline","onActionToggle","state","w","bAccRow","columns","componentDidMount","render","background","color","head","map","x","width","textAlign","border","title","fontSize","Object","values","y","button","j","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,sBAfmB,GAeM,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,UAAIC,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,UAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AAEAC,MAAAA,KAAK,WAAId,GAAJ,uBAA2B;AAC9Be,QAAAA,MAAM,EAAE,MADsB;AAE9BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,iCADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFqB;AAM9BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAER,MADc;AAEnBS,UAAAA,QAAQ,EAAE;AAFS,SAAf;AANwB,OAA3B,CAAL,CAWGC,IAXH,CAWQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXf,EAaGF,IAbH,CAaQG,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,UAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD,SAFD,MAEO;AACLD,UAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,OAnBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CArBhB;AAsBD,KA7CkB;;AAAA,SA+CnBC,wBA/CmB,GA+CQ3B,CAAC,IAAI;AAC9B,WAAKI,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AAEA,UAAIC,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,UAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AAEAC,MAAAA,KAAK,WAAId,GAAJ,uBAA2B;AAC9Be,QAAAA,MAAM,EAAE,MADsB;AAE9BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,iCADT;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAFqB;AAM9BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAER,MADc;AAEnBS,UAAAA,QAAQ,EAAE;AAFS,SAAf;AANwB,OAA3B,CAAL,CAWGC,IAXH,CAWQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXf,EAaGF,IAbH,CAaQG,IAAI,IAAI;AACZ,YAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,UAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACAI,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,SAHD,MAGO;AACLP,UAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,OApBH,EAsBGC,KAtBH,CAsBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CAtBhB;AAuBD,KA9EkB;;AAAA,SAqFnBK,OArFmB,GAqFT/B,CAAC,IAAI;AACb,UAAI,KAAKF,KAAL,CAAWkC,KAAX,KAAqB,UAAzB,EAAqC;AACnC,YAAI1B,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,YAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AACAC,QAAAA,KAAK,WAAId,GAAJ,4BAAgC;AACnCe,UAAAA,MAAM,EAAE,MAD2B;AAEnCC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iCADT;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAF0B;AAMnCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,GAAG,EAAER;AADc,WAAf;AAN6B,SAAhC,CAAL,CAUGU,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACZ,cAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACAI,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAHD,MAGO;AACLP,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,SAnBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CArBhB;AAsBD,OA3BD,MA2BO,IAAI,KAAK5B,KAAL,CAAWkC,KAAX,KAAqB,OAAzB,EAAkC;AACvC,YAAI1B,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,YAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AACAC,QAAAA,KAAK,WAAId,GAAJ,0BAA8B;AACjCe,UAAAA,MAAM,EAAE,MADyB;AAEjCC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iCADT;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAFwB;AAMjCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBkB,YAAAA,OAAO,EAAEzB;AADU,WAAf;AAN2B,SAA9B,CAAL,CAUGU,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACZ,cAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACAI,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAHD,MAGO;AACLP,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,SAnBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CArBhB;AAsBD;AACF,KA7IkB;;AAAA,SAqJnBQ,OArJmB,GAqJTlC,CAAC,IAAI;AACb,UAAI,KAAKF,KAAL,CAAWkC,KAAX,KAAqB,UAAzB,EAAqC;AACnC,YAAI1B,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,YAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AACAC,QAAAA,KAAK,WAAId,GAAJ,4BAAgC;AACnCe,UAAAA,MAAM,EAAE,MAD2B;AAEnCC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iCADT;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAF0B;AAMnCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,GAAG,EAAER;AADc,WAAf;AAN6B,SAAhC,CAAL,CAUGU,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACZ,cAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACAI,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAHD,MAGO;AACLP,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,SAnBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CArBhB;AAsBD,OA3BD,MA2BO,IAAI,KAAK5B,KAAL,CAAWkC,KAAX,KAAqB,OAAzB,EAAkC;AACvC9B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAIG,GAAG,GAAG,KAAKR,KAAL,CAAWS,EAArB;AACA,YAAIC,MAAM,GAAGF,GAAG,CAACN,CAAD,CAAhB;AAEAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,MAAhC;AACAC,QAAAA,KAAK,WAAId,GAAJ,0BAA8B;AACjCe,UAAAA,MAAM,EAAE,MADyB;AAEjCC,UAAAA,OAAO,EAAE;AACP,4BAAgB,iCADT;AAEPC,YAAAA,MAAM,EAAE;AAFD,WAFwB;AAMjCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBkB,YAAAA,OAAO,EAAEzB;AADU,WAAf;AAN2B,SAA9B,CAAL,CAUGU,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACZ,cAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACAI,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAHD,MAGO;AACLP,YAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACD;AACF,SAnBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CArBhB;AAsBD;AACF,KA9MkB;;AAAA,SAgNnBS,cAhNmB,GAgNF,MAAM,CAAE,CAhNN;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,EADQ;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXlC,MAAAA,MAAM,EAAE,KAJG;AAKXY,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AACDuB,EAAAA,iBAAiB,GAAG;AAClBtC,IAAAA,OAAO,CAACC,GAAR;AACD;;AAqMDsC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,uCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,kBADP;AAELC,QAAAA,KAAK,EAAE;AAFF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAK7C,KAAL,CAAW8C,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IACpB;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,GAAG,EAAEA,CAAC,CAACvC,EAFT;AAGE,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAED,CAAC,CAACC,KAAX;AAAkBC,QAAAA,SAAS,EAAE,QAA7B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGH,CAAC,CAACI,KALL,CADD,CANH,CADF,CADF,CADF,EAqBE;AACE,MAAA,SAAS,EAAC,iCADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrD,KAAL,CAAWe,IAAX,CAAgBgC,GAAhB,CAAoB,CAACC,CAAD,EAAI9C,CAAJ,KACnB;AACE,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWY,MAAX,CAAkBV,CAAlB,EAAqB,IAArB,CADjB;AAEE,MAAA,GAAG,EAAEA,CAFP;AAGE,MAAA,KAAK,EAAE;AACLgD,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,MAAM,EAAE;AAFH,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGG,MAAM,CAACC,MAAP,CAAcP,CAAd,EAAiBD,GAAjB,CAAqB,CAACS,CAAD,EAAItD,CAAJ,KACpB;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAE;AACL+C,QAAAA,KAAK,EAAE,KAAKjD,KAAL,CAAW8C,IAAX,CAAgB5C,CAAhB,EAAmB+C;AADrB,OAFT;AAKE,MAAA,SAAS,EAAC,mBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGO,CAPH,CADD,CARH,EAmBG,KAAKxD,KAAL,CAAWyD,MAAX,GACG,KAAKzD,KAAL,CAAWyD,MAAX,CAAkBV,GAAlB,CAAsB,CAACC,CAAD,EAAIU,CAAJ,KACpB;AACE,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE,KAAKjD,KAAL,CAAW8C,IAAX,CAAgBY,CAAhB,EAAmBT;AAA5B,OADT;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGD,CAAC,CAACW,IAAF,KAAW,SAAX,GACC;AACE,MAAA,SAAS,EAAC,0CADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAK1B,OAAL,CAAa/B,CAAb,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG8C,CAAC,CAACW,IAJL,CADD,GAQC;AACE,MAAA,SAAS,EAAC,0CADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvB,OAAL,CAAalC,CAAb,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG8C,CAAC,CAACW,IAJL,CAZJ,CADF,CADH,GAuBG,IA1CN,EA2CG,KAAK3D,KAAL,CAAWO,MAAX,GACG,KAAKP,KAAL,CAAWO,MAAX,CAAkBwC,GAAlB,CAAsB,CAACC,CAAD,EAAIT,CAAJ,KACpB;AACE,MAAA,GAAG,EAAES,CADP;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAKjD,KAAL,CAAW8C,IAAX,CAAgBP,CAAhB,EAAmBU;AAA5B,OAFT;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,CAAC,CAACW,IAAF,KAAW,UAAX,GACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,OAAO,EAAE,MACP,KAAK1D,sBAAL,CAA4BC,CAA5B,EAA+B,IAA/B,CAHJ;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CADF,CADD,GAmBC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,OAAO,EAAE,MACP,KAAKD,sBAAL,CAA4BC,CAA5B,EAA+B,KAA/B,CAHJ;AAKE,MAAA,SAAS,EAAC,YALZ;AAME,MAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CADF,CAxBJ,CADF,CADH,GAiFG,IA5HN,CADD,CADH,CAJF,CArBF,CADF;AA+JD;;AAnXkC;AAsXrC,eAAeJ,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config\";\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: [],\n      toggle: false,\n      isActive: false\n    };\n  }\n  componentDidMount() {\n    console.log();\n  }\n\n  onActionActivateToggle = (i, status) => {\n    console.log(status);\n    this.setState({ toggle: true });\n    let ids = this.props.id;\n    let chosen = ids[i];\n\n    console.log(\"Toggle Activated\", chosen);\n\n    fetch(`${url}/api/bank/toggle`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: chosen,\n        isActive: true\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n        } else {\n          alert(data.message);\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  onActionDeactivateToggle = i => {\n    this.setState({ toggle: false });\n\n    let ids = this.props.id;\n    let chosen = ids[i];\n\n    console.log(\"Toggle Activated\", chosen);\n\n    fetch(`${url}/api/bank/toggle`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: chosen,\n        isActive: false\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        } else {\n          alert(data.message);\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  /**\n  |--------------------------------------------------\n  | approve business requests and agent requests\n  |--------------------------------------------------\n  */\n  approve = i => {\n    if (this.props.model === \"business\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/business/approve`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    } else if (this.props.model === \"agent\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/agents/approve`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    }\n  };\n\n  /**\n  |--------------------------------------------------\n  | decline business requests and agent requests\n  |--------------------------------------------------\n  */\n\n  decline = i => {\n    if (this.props.model === \"business\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/business/decline`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    } else if (this.props.model === \"agent\") {\n      console.log(\"Hello\");\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/agents/decline`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    }\n  };\n\n  onActionToggle = () => {};\n\n  render() {\n    return (\n      <div>\n        <table className=\"table fixed-table-head table-bordered\">\n          <thead>\n            <tr\n              style={{\n                background: \"rgb(248,248,248)\",\n                color: \"rgb(204,204,204)\"\n              }}\n            >\n              {this.props.head.map(x => (\n                <th\n                  className=\"table-head-data-mobile\"\n                  key={x.id}\n                  style={{ width: x.width, textAlign: \"center\", border: 0 }}\n                >\n                  {x.title}\n                </th>\n              ))}\n            </tr>\n          </thead>\n        </table>\n        <table\n          className=\"table table-bordered user-table\"\n          style={{ fontSize: 14 }}\n        >\n          <tbody>\n            {this.props.body.map((x, i) => (\n              <tr\n                onClick={() => this.props.method(i, true)}\n                key={i}\n                style={{\n                  textAlign: \"center\",\n                  border: 0\n                }}\n              >\n                {Object.values(x).map((y, i) => (\n                  <td\n                    key={i}\n                    style={{\n                      width: this.props.head[i].width\n                    }}\n                    className=\"table-data-mobile\"\n                  >\n                    {y}\n                  </td>\n                ))}\n                {this.props.button\n                  ? this.props.button.map((x, j) => (\n                      <td\n                        style={{ width: this.props.head[j].width }}\n                        className=\"table-data-mobile\"\n                      >\n                        {x.name === \"Approve\" ? (\n                          <button\n                            className=\"businessRequestApprove table-data-mobile\"\n                            onClick={() => this.approve(i)}\n                          >\n                            {x.name}\n                          </button>\n                        ) : (\n                          <button\n                            className=\"businessRequestDecline table-data-mobile\"\n                            onClick={() => this.decline(i)}\n                          >\n                            {x.name}\n                          </button>\n                        )}\n                      </td>\n                    ))\n                  : null}\n                {this.props.toggle\n                  ? this.props.toggle.map((x, w) => (\n                      <td\n                        key={x}\n                        style={{ width: this.props.head[w].width }}\n                        className=\"table-data-mobile\"\n                      >\n                        {x.name === \"Activate\" ? (\n                          <div className=\"user-toggle\">\n                            <div className=\"switch-container\">\n                              <label>\n                                <input\n                                  ref=\"switch\"\n                                  onClick={() =>\n                                    this.onActionActivateToggle(i, true)\n                                  }\n                                  className=\"user\"\n                                  type=\"checkbox\"\n                                />\n                                <div>\n                                  <div />\n                                </div>\n                              </label>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"user-toggle\">\n                            <div className=\"switch-container\">\n                              <label>\n                                <input\n                                  ref=\"switch\"\n                                  onClick={() =>\n                                    this.onActionActivateToggle(i, false)\n                                  }\n                                  className=\"user-agent\"\n                                  type=\"checkbox\"\n                                />\n                                <div>\n                                  <div />\n                                </div>\n                              </label>\n                            </div>\n                          </div>\n                        )}\n                        {/* {this.state.toggle === true ? (\n                          <div className=\"user-toggle\">\n                            <div className=\"switch-container\">\n                              <label>\n                                <input\n                                  ref=\"switch\"\n                                  onClick={() =>\n                                    this.onActionDeactivateToggle(i)\n                                  }\n                                  className=\"user-agent\"\n                                  type=\"checkbox\"\n                                />\n                                <div>\n                                  <div />\n                                </div>\n                              </label>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"user-toggle\">\n                            <div className=\"switch-container\">\n                              <label>\n                                <input\n                                  ref=\"switch\"\n                                  onClick={() => this.onActionActivateToggle(i)}\n                                  className=\"user\"\n                                  type=\"checkbox\"\n                                />\n                                <div>\n                                  <div />\n                                </div>\n                              </label>\n                            </div>\n                          </div>\n                        )} */}\n                      </td>\n                    ))\n                  : null}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}