{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Feedback/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passedFromChild = (i, state) => {\n      console.log(state);\n      this.setState({\n        approveDecline: state\n      });\n    };\n\n    this.fetchAllFeedback = () => {\n      fetch(\"\".concat(url, \"/api/feedbacks\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(\"got your data\", data);\n\n        if (data.success) {\n          let feedback = [];\n          data.feedbacks.map(x => {\n            let user = {\n              _id: x._id,\n              rating: x.rating,\n              description: x.description,\n              dateCreated: x.dateCreated\n            };\n            feedback.push(user);\n          });\n          this.setState({\n            feedback\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for users page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      feedback: []\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on load runs the fetchFeedback\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.fetchAllFeedback();\n  }\n  /**\n  |--------------------------------------------------\n  | receives and sets state \n    selected row data from the Table component\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title business-request-title\",\n      style: {\n        marginLeft: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Feedback\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingTop: \"8rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadFeedbackTable,\n      body: this.state.feedback,\n      method: this.passedFromChild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Feedback/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","passedFromChild","i","state","console","log","setState","approveDecline","fetchAllFeedback","fetch","method","mode","headers","Accept","then","res","json","success","feedback","feedbacks","map","x","user","_id","rating","description","dateCreated","push","catch","err","alert","text","onClick","cancelable","componentDidMount","render","marginLeft","paddingTop","tHeadFeedbackTable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      feedback: []\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on load runs the fetchFeedback\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.fetchAllFeedback();\n  }\n\n  /**\n  |--------------------------------------------------\n  | receives and sets state \n    selected row data from the Table component\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(state);\n\n    this.setState({ approveDecline: state });\n  };\n\n  /**\n  |--------------------------------------------------\n  | fetches all feedback info from the api\n  |--------------------------------------------------\n  */\n  fetchAllFeedback = () => {\n    fetch(`${url}/api/feedbacks`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"got your data\", data);\n        if (data.success) {\n          let feedback = [];\n          data.feedbacks.map(x => {\n            let user = {\n              _id: x._id,\n              rating: x.rating,\n              description: x.description,\n              dateCreated: x.dateCreated\n            };\n            feedback.push(user);\n          });\n\n          this.setState({ feedback });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for users page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        <h3\n          className=\"page-title business-request-title\"\n          style={{ marginLeft: \"1rem\" }}\n        >\n          Feedback\n        </h3>\n        <div className=\"container-fluid\" style={{ paddingTop: \"8rem\" }}>\n          <Table\n            head={data.tHeadFeedbackTable}\n            body={this.state.feedback}\n            method={this.passedFromChild}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}