{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/PaymentMethods/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLoadFetchPMethods = () => {\n      fetch(\"\".concat(url, \"/api/payment_method\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let payment_methods = [];\n          data.payment_methods.map((x, i) => {\n            let payment = {\n              no: i,\n              name: x.name,\n              description: x.description\n            };\n            payment_methods.push(payment);\n            this.state.ids.push(x._id);\n            return payment_methods;\n          });\n          this.setState({\n            payment_methods\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for business page, for fetching business types\", err);\n        alert(\"Error for business page, for fetching business types\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.passedFromChild = (i, state) => {\n      console.log(i);\n    };\n\n    this.onActionAddPaymentMethod = async () => {\n      await this.setState({\n        popup: false\n      });\n      fetch(\"\".concat(url, \"/api/payment_method\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          description: this.state.description\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      popup: false,\n      payment_methods: [],\n      name: \"\",\n      description: \"\",\n      ids: []\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.onLoadFetchPMethods;\n  }\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-modal-opacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      className: \"main-cat-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Payment Methods\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary add-cat-btn\",\n      onClick: () => this.setState({\n        popup: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://png.pngtree.com/svg/20161118/6fc980719c.svg\",\n      alt: \"add-modal-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-popup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"cat-pop-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Category Title\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control cat-pop-input\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-control cat-pop-input\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn cat-save-btn\",\n      onClick: () => this.onActionAddPaymentMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Add\"))) : null, React.createElement(\"div\", {\n      className: \"container-fluid mobile-container\",\n      style: {\n        paddingTop: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadPaymentMTable,\n      body: this.state.payment_methods,\n      method: this.passedFromChild,\n      toggle: data.tBodyToggle,\n      id: this.state.ids,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/PaymentMethods/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","onLoadFetchPMethods","fetch","method","mode","headers","Accept","then","res","json","success","payment_methods","map","x","i","payment","no","name","description","push","state","ids","_id","setState","catch","err","console","log","alert","text","onClick","cancelable","passedFromChild","onActionAddPaymentMethod","popup","body","JSON","stringify","message","window","location","reload","componentDidMount","render","e","target","value","paddingTop","tHeadPaymentMTable","tBodyToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popup: false,\n      payment_methods: [],\n      name: \"\",\n      description: \"\",\n      ids: []\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.onLoadFetchPMethods;\n  }\n\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n  onLoadFetchPMethods = () => {\n    fetch(`${url}/api/payment_method`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let payment_methods = [];\n          data.payment_methods.map((x, i) => {\n            let payment = {\n              no: i,\n              name: x.name,\n              description: x.description\n            };\n            payment_methods.push(payment);\n            this.state.ids.push(x._id);\n            return payment_methods;\n          });\n          this.setState({ payment_methods });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Error for business page, for fetching business types\",\n          err\n        );\n\n        alert(\n          \"Error for business page, for fetching business types\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | method to use the state from the table and the row that is clicked\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(i);\n  };\n\n  /**\n  |--------------------------------------------------\n  | add a new category\n  |--------------------------------------------------\n  */\n  onActionAddPaymentMethod = async () => {\n    await this.setState({ popup: false });\n\n    fetch(`${url}/api/payment_method`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        description: this.state.description\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        {this.state.popup === true ? (\n          <div className=\"cat-modal-opacity\" />\n        ) : null}\n        <h3 className=\"main-cat-page-title\">Payment Methods</h3>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary add-cat-btn\"\n          onClick={() => this.setState({ popup: true })}\n        >\n          <img\n            src=\"https://png.pngtree.com/svg/20161118/6fc980719c.svg\"\n            alt=\"add-modal-icon\"\n          />\n        </button>\n        {this.state.popup === true ? (\n          <div className=\"cat-popup-container\">\n            <div>\n              <h3 className=\"cat-pop-title\">Category Title</h3>\n            </div>\n            <div>\n              <input\n                className=\"form-control cat-pop-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ name: e.target.value })}\n              />\n              <input\n                className=\"form-control cat-pop-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ description: e.target.value })}\n              />\n              <button\n                className=\"btn cat-save-btn\"\n                onClick={() => this.onActionAddPaymentMethod()}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"container-fluid mobile-container\"\n          style={{ paddingTop: \"7.5rem\" }}\n        >\n          <Table\n            head={data.tHeadPaymentMTable}\n            body={this.state.payment_methods}\n            method={this.passedFromChild}\n            toggle={data.tBodyToggle}\n            id={this.state.ids}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}