{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Banks/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLoadFetchBanks = () => {\n      fetch(\"\".concat(url, \"/api/bank\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let banks = [];\n          data.banks.map((x, i) => {\n            let bank = {\n              no: i,\n              name: x.name,\n              date: x.description\n            };\n            banks.push(bank);\n            this.state.ids.push(x._id);\n            this.state.isActive.push(data.banks);\n            return banks;\n          });\n          this.setState({\n            banks\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for banks page, for fetching banks data\", err);\n        alert(\"Error for banks page, for fetching banks data\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.passedFromChild = (i, state) => {\n      console.log(i);\n    };\n\n    this.onActionAddBank = async () => {\n      await this.setState({\n        popup: false\n      });\n      fetch(\"\".concat(url, \"/api/bank\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          description: this.state.description\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      popup: false,\n      banks: [],\n      name: \"\",\n      description: \"\",\n      ids: [],\n      isActive: []\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.onLoadFetchBanks();\n  }\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-modal-opacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      className: \"main-cat-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Banks\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary add-cat-btn\",\n      onClick: () => this.setState({\n        popup: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://png.pngtree.com/svg/20161118/6fc980719c.svg\",\n      alt: \"add-modal-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-popup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"cat-pop-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Add New Bank\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Enter a new bank name\",\n      className: \"form-control cat-pop-input\",\n      value: this.state.name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      placeholder: \"Enter a new bank description\",\n      className: \"form-control cat-pop-input\",\n      value: this.state.description,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn cat-save-btn\",\n      onClick: () => this.onActionAddBank(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Add\"))) : null, React.createElement(\"div\", {\n      className: \"container-fluid mobile-container\",\n      style: {\n        paddingTop: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadBanksTable,\n      body: this.state.banks,\n      method: this.passedFromChild,\n      toggle: data.tBodyToggle,\n      id: this.state.ids,\n      isActive: this.state.isActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Banks/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","onLoadFetchBanks","fetch","method","mode","headers","Accept","then","res","json","success","banks","map","x","i","bank","no","name","date","description","push","state","ids","_id","isActive","setState","catch","err","console","log","alert","text","onClick","cancelable","passedFromChild","onActionAddBank","popup","body","JSON","stringify","message","window","location","reload","componentDidMount","render","e","target","value","marginTop","paddingTop","tHeadBanksTable","tBodyToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popup: false,\n      banks: [],\n      name: \"\",\n      description: \"\",\n      ids: [],\n      isActive: []\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.onLoadFetchBanks();\n  }\n\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n  onLoadFetchBanks = () => {\n    fetch(`${url}/api/bank`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let banks = [];\n          data.banks.map((x, i) => {\n            let bank = {\n              no: i,\n              name: x.name,\n              date: x.description\n            };\n            banks.push(bank);\n            this.state.ids.push(x._id);\n            this.state.isActive.push(data.banks);\n            return banks;\n          });\n          this.setState({ banks });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for banks page, for fetching banks data\", err);\n\n        alert(\n          \"Error for banks page, for fetching banks data\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | method to use the state from the table and the row that is clicked\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(i);\n  };\n\n  /**\n  |--------------------------------------------------\n  | add a new bank\n  |--------------------------------------------------\n  */\n  onActionAddBank = async () => {\n    await this.setState({ popup: false });\n\n    fetch(`${url}/api/bank`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        description: this.state.description\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        {this.state.popup === true ? (\n          <div className=\"cat-modal-opacity\" />\n        ) : null}\n        <h3 className=\"main-cat-page-title\">Banks</h3>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary add-cat-btn\"\n          onClick={() => this.setState({ popup: true })}\n        >\n          <img\n            src=\"https://png.pngtree.com/svg/20161118/6fc980719c.svg\"\n            alt=\"add-modal-icon\"\n          />\n        </button>\n        {this.state.popup === true ? (\n          <div className=\"cat-popup-container\">\n            <div>\n              <h3 className=\"cat-pop-title\">Add New Bank</h3>\n            </div>\n            <div>\n              <input\n                placeholder=\"Enter a new bank name\"\n                className=\"form-control cat-pop-input\"\n                value={this.state.name}\n                onChange={e => this.setState({ name: e.target.value })}\n              />\n              <input\n                style={{ marginTop: \"1rem\" }}\n                placeholder=\"Enter a new bank description\"\n                className=\"form-control cat-pop-input\"\n                value={this.state.description}\n                onChange={e => this.setState({ description: e.target.value })}\n              />\n              <button\n                className=\"btn cat-save-btn\"\n                onClick={() => this.onActionAddBank()}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"container-fluid mobile-container\"\n          style={{ paddingTop: \"7.5rem\" }}\n        >\n          <Table\n            head={data.tHeadBanksTable}\n            body={this.state.banks}\n            method={this.passedFromChild}\n            toggle={data.tBodyToggle}\n            id={this.state.ids}\n            isActive={this.state.isActive}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}