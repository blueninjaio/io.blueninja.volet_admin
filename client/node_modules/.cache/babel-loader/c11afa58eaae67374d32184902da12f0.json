{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js\";\nimport React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this._storeData = async receivedToken => {\n      this.setState({\n        token: receivedToken\n      });\n\n      try {\n        await localStorage.setItem(\"user_token\", receivedToken);\n\n        if (receivedToken !== null) {\n          fetch(\"\".concat(url, \"/api/admin/me\"), {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": \"\".concat(receivedToken),\n              Authorization: \"Bearer \".concat(receivedToken)\n            }\n          }).then(res => res.json()).then(data => {\n            if (data.success === true) {\n              console.log(\"Verification data: \", data.user);\n              alert(data.message); // this._storeData(data.token);\n\n              this.props.loginNow();\n            }\n          }).catch(err => console.log(err));\n        }\n      } catch (error) {\n        console.log(error, \"this is an error\");\n      }\n    };\n\n    this.login = async () => {\n      // fetch(`${url}/api/admin/login`, {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json; charset=utf-8\",\n      //     Accept: \"application/json\"\n      //   },\n      //   body: JSON.stringify({\n      //     email: this.state.email,\n      //     password: this.state.password\n      //   })\n      // })\n      //   .then(res => res.json())\n      //   .then(data => {\n      //     console.log(\"Data\", data);\n      //     console.log(\"Data\", data.success);\n      //     if (data.success === true) {\n      //       console.log(\"Registration status: \", data.success);\n      //       alert(data.message);\n      //       this._storeData(data.token);\n      //     }\n      //   })\n      //   .catch(err => console.log(err));\n      this.props.getToken(this.state.email, this.state.password);\n\n      if (this.props.token === null) {\n        let token = localStorage.getItem(\"user_token\");\n\n        this._storeData(token);\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      token: \"\"\n    };\n  }\n\n  inputEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n    console.log(\"Email:\", this.state.email);\n  }\n\n  inputPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n    console.log(\"Password:\", this.state.password);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"login-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"input\", {\n      value: this.state.email,\n      onChange: this.inputEmail.bind(this),\n      type: \"email\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.inputPassword.bind(this),\n      type: \"password\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Forgot Password?\")), React.createElement(\"button\", {\n      className: \"login-btn\",\n      onClick: () => this.login(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text go-register-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Don't have an account? \", React.createElement(NavLink, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Sign up\")));\n  }\n\n}\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\n\n\nexport default connect(mapStateToProps, {\n  loginNow,\n  getToken\n})(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js"],"names":["React","Component","loginNow","getToken","connect","url","NavLink","index","constructor","props","_storeData","receivedToken","setState","token","localStorage","setItem","fetch","method","headers","Authorization","then","res","json","data","success","console","log","user","alert","message","catch","err","error","login","state","email","password","getItem","inputEmail","e","target","value","inputPassword","render","bind","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\n\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      token: \"\"\n    };\n  }\n\n  inputEmail(e) {\n    this.setState({ email: e.target.value });\n    console.log(\"Email:\", this.state.email);\n  }\n\n  inputPassword(e) {\n    this.setState({ password: e.target.value });\n    console.log(\"Password:\", this.state.password);\n  }\n\n  _storeData = async receivedToken => {\n    this.setState({ token: receivedToken });\n    try {\n      await localStorage.setItem(\"user_token\", receivedToken);\n\n      if (receivedToken !== null) {\n        fetch(`${url}/api/admin/me`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": `${receivedToken}`,\n            Authorization: `Bearer ${receivedToken}`\n          }\n        })\n          .then(res => res.json())\n\n          .then(data => {\n            if (data.success === true) {\n              console.log(\"Verification data: \", data.user);\n              alert(data.message);\n              // this._storeData(data.token);\n              this.props.loginNow();\n            }\n          })\n\n          .catch(err => console.log(err));\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n  };\n\n  /**\n    |--------------------------------------------------\n    | calls login dispatcher \n    |--------------------------------------------------\n    */\n  login = async () => {\n    // fetch(`${url}/api/admin/login`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json; charset=utf-8\",\n    //     Accept: \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     email: this.state.email,\n    //     password: this.state.password\n    //   })\n    // })\n    //   .then(res => res.json())\n    //   .then(data => {\n    //     console.log(\"Data\", data);\n    //     console.log(\"Data\", data.success);\n    //     if (data.success === true) {\n    //       console.log(\"Registration status: \", data.success);\n    //       alert(data.message);\n    //       this._storeData(data.token);\n    //     }\n    //   })\n    //   .catch(err => console.log(err));\n    this.props.getToken(this.state.email, this.state.password);\n\n    if (this.props.token === null) {\n      let token = localStorage.getItem(\"user_token\");\n      this._storeData(token);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <h2 className=\"login-title\">Login</h2>\n\n        <input\n          value={this.state.email}\n          onChange={this.inputEmail.bind(this)}\n          type=\"email\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter email\"\n        />\n        <input\n          value={this.state.password}\n          onChange={this.inputPassword.bind(this)}\n          type=\"password\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter password\"\n        />\n\n        <NavLink to=\"/forgotpassword\">\n          <small id=\"emailHelp\" className=\"form-text forgot-password-text\">\n            Forgot Password?\n          </small>\n        </NavLink>\n        <button className=\"login-btn\" onClick={() => this.login()}>\n          Login\n        </button>\n\n        <small\n          id=\"emailHelp\"\n          className=\"form-text forgot-password-text go-register-text\"\n        >\n          Don't have an account? <NavLink to=\"/register\">Sign up</NavLink>\n        </small>\n      </div>\n    );\n  }\n}\n\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\nexport default connect(\n  mapStateToProps,\n  { loginNow, getToken }\n)(index);\n"]},"metadata":{},"sourceType":"module"}