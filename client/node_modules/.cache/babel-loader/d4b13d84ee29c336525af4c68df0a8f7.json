{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/TableCheckbox/index.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config\";\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onActionActivateToggle = (k, i) => {\n      console.log(\"E: \", k.target.checked);\n      console.log(\"Id: \", this.props.id[i]); // this.setState({ isActive: !this.state.isActive });\n      // console.log(this.state.isActive);\n      // let ids = this.props.id;\n      // let chosen = ids[i];\n      // console.log(\"Toggle Activated\", chosen);\n      // fetch(`${url}/api/bank/toggle`, {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json; charset=utf-8\",\n      //     Accept: \"application/json\"\n      //   },\n      //   body: JSON.stringify({\n      //     _id: chosen,\n      //     isActive: this.state.isActive\n      //   })\n      // })\n      //   .then(res => res.json())\n      //   .then(data => {\n      //     if (data.success === true) {\n      //       alert(data.message);\n      //     } else {\n      //       alert(data.message);\n      //     }\n      //   })\n      //   .catch(err => console.log(err));\n    };\n\n    this.onActionDeactivateToggle = i => {\n      this.setState({\n        toggle: false\n      });\n      let ids = this.props.id;\n      let chosen = ids[i];\n      console.log(\"Toggle Activated\", chosen);\n      fetch(\"\".concat(url, \"/api/bank/toggle\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen,\n          isActive: false\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        } else {\n          alert(data.message);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.approve = i => {\n      if (this.props.model === \"business\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/business/approve\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            _id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      } else if (this.props.model === \"agent\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/agents/approve\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.decline = i => {\n      if (this.props.model === \"business\") {\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/business/decline\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            _id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      } else if (this.props.model === \"agent\") {\n        console.log(\"Hello\");\n        let ids = this.props.id;\n        let chosen = ids[i];\n        console.log(\"Approved Chosen:\", chosen);\n        fetch(\"\".concat(url, \"/api/agents/decline\"), {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: chosen\n          })\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onActionToggle = () => {};\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: [],\n      toggle: false,\n      isActive: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Isactive\", this.props.isActive);\n    console.log(\"IDS\", this.props.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table fixed-table-head table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        background: \"rgb(248,248,248)\",\n        color: \"rgb(204,204,204)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.props.head.map(x => React.createElement(\"th\", {\n      className: \"table-head-data-mobile\",\n      key: x.id,\n      style: {\n        width: x.width,\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, x.title))))), React.createElement(\"table\", {\n      className: \"table table-bordered user-table\",\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, this.props.body.map((x, i) => React.createElement(\"tr\", {\n      onClick: () => this.props.method(i, true),\n      key: i,\n      style: {\n        textAlign: \"center\",\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, Object.values(x).map((y, i) => React.createElement(\"td\", {\n      key: i,\n      style: {\n        width: this.props.head[i].width\n      },\n      className: \"table-data-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, y)), React.createElement(\"td\", {\n      style: {\n        width: \"25%\"\n      },\n      className: \"table-data-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.props.isActive.map((x, z) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, x) // x ? (\n    //   <div className=\"user-toggle\" key={z}>\n    //     <div className=\"switch-container\">\n    //       <label>\n    //         <input\n    //           checked\n    //           ref=\"switch\"\n    //           onChange={k => this.onActionActivateToggle(k, i)}\n    //           className=\"user\"\n    //           type=\"checkbox\"\n    //         />\n    //         <div>\n    //           <div />\n    //         </div>\n    //       </label>\n    //     </div>\n    //   </div>\n    // ) : (\n    //   <div className=\"user-toggle\" key={z}>\n    //     <div className=\"switch-container\">\n    //       <label>\n    //         <input\n    //           ref=\"switch\"\n    //           onChange={k => this.onActionActivateToggle(k, i)}\n    //           className=\"user-agent\"\n    //           type=\"checkbox\"\n    //         />\n    //         <div>\n    //           <div />\n    //         </div>\n    //       </label>\n    //     </div>\n    //   </div>\n    // )\n    ) // <div className=\"user-toggle\">\n    //   <div className=\"switch-container\">\n    //     <label>\n    //       <input\n    //         ref=\"switch\"\n    //         onClick={() =>\n    //           this.onActionDeactivateToggle(i)\n    //         }\n    //         className=\"user-agent\"\n    //         type=\"checkbox\"\n    //       />\n    //       <div>\n    //         <div />\n    //       </div>\n    //     </label>\n    //   </div>\n    // </div>\n    // ) : (\n    ))))));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/components/TableCheckbox/index.js"],"names":["React","Component","url","index","constructor","props","onActionActivateToggle","k","i","console","log","target","checked","id","onActionDeactivateToggle","setState","toggle","ids","chosen","fetch","method","headers","Accept","body","JSON","stringify","_id","isActive","then","res","json","data","success","alert","message","window","location","reload","catch","err","approve","model","user_id","decline","onActionToggle","state","w","bAccRow","columns","componentDidMount","render","background","color","head","map","x","width","textAlign","border","title","fontSize","Object","values","y","z"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport { url } from \"../../config\";\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      w: \"\",\n      bAccRow: false,\n      columns: [],\n      toggle: false,\n      isActive: false\n    };\n  }\n  componentDidMount() {\n    console.log(\"Isactive\", this.props.isActive);\n    console.log(\"IDS\", this.props.id);\n  }\n\n  onActionActivateToggle = (k, i) => {\n    console.log(\"E: \", k.target.checked);\n    console.log(\"Id: \", this.props.id[i]);\n    // this.setState({ isActive: !this.state.isActive });\n    // console.log(this.state.isActive);\n    // let ids = this.props.id;\n    // let chosen = ids[i];\n\n    // console.log(\"Toggle Activated\", chosen);\n\n    // fetch(`${url}/api/bank/toggle`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json; charset=utf-8\",\n    //     Accept: \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     _id: chosen,\n    //     isActive: this.state.isActive\n    //   })\n    // })\n    //   .then(res => res.json())\n\n    //   .then(data => {\n    //     if (data.success === true) {\n    //       alert(data.message);\n    //     } else {\n    //       alert(data.message);\n    //     }\n    //   })\n\n    //   .catch(err => console.log(err));\n  };\n\n  onActionDeactivateToggle = i => {\n    this.setState({ toggle: false });\n\n    let ids = this.props.id;\n    let chosen = ids[i];\n\n    console.log(\"Toggle Activated\", chosen);\n\n    fetch(`${url}/api/bank/toggle`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        _id: chosen,\n        isActive: false\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        } else {\n          alert(data.message);\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  /**\n  |--------------------------------------------------\n  | approve business requests and agent requests\n  |--------------------------------------------------\n  */\n  approve = i => {\n    if (this.props.model === \"business\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/business/approve`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    } else if (this.props.model === \"agent\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/agents/approve`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    }\n  };\n\n  /**\n  |--------------------------------------------------\n  | decline business requests and agent requests\n  |--------------------------------------------------\n  */\n\n  decline = i => {\n    if (this.props.model === \"business\") {\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/business/decline`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          _id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    } else if (this.props.model === \"agent\") {\n      console.log(\"Hello\");\n      let ids = this.props.id;\n      let chosen = ids[i];\n\n      console.log(\"Approved Chosen:\", chosen);\n      fetch(`${url}/api/agents/decline`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: chosen\n        })\n      })\n        .then(res => res.json())\n\n        .then(data => {\n          if (data.success === true) {\n            alert(data.message);\n            window.location.reload();\n          } else {\n            alert(data.message);\n          }\n        })\n\n        .catch(err => console.log(err));\n    }\n  };\n\n  onActionToggle = () => {};\n\n  render() {\n    return (\n      <div>\n        <table className=\"table fixed-table-head table-bordered\">\n          <thead>\n            <tr\n              style={{\n                background: \"rgb(248,248,248)\",\n                color: \"rgb(204,204,204)\"\n              }}\n            >\n              {this.props.head.map(x => (\n                <th\n                  className=\"table-head-data-mobile\"\n                  key={x.id}\n                  style={{ width: x.width, textAlign: \"center\", border: 0 }}\n                >\n                  {x.title}\n                </th>\n              ))}\n            </tr>\n          </thead>\n        </table>\n        <table\n          className=\"table table-bordered user-table\"\n          style={{ fontSize: 14 }}\n        >\n          <tbody>\n            {this.props.body.map((x, i) => (\n              <tr\n                onClick={() => this.props.method(i, true)}\n                key={i}\n                style={{\n                  textAlign: \"center\",\n                  border: 0\n                }}\n              >\n                {Object.values(x).map((y, i) => (\n                  <td\n                    key={i}\n                    style={{\n                      width: this.props.head[i].width\n                    }}\n                    className=\"table-data-mobile\"\n                  >\n                    {y}\n                  </td>\n                ))}\n\n                <td style={{ width: \"25%\" }} className=\"table-data-mobile\">\n                  {this.props.isActive.map(\n                    (x, z) => (\n                      <p>{x}</p>\n                    )\n                    // x ? (\n                    //   <div className=\"user-toggle\" key={z}>\n                    //     <div className=\"switch-container\">\n                    //       <label>\n                    //         <input\n                    //           checked\n                    //           ref=\"switch\"\n                    //           onChange={k => this.onActionActivateToggle(k, i)}\n                    //           className=\"user\"\n                    //           type=\"checkbox\"\n                    //         />\n                    //         <div>\n                    //           <div />\n                    //         </div>\n                    //       </label>\n                    //     </div>\n                    //   </div>\n                    // ) : (\n                    //   <div className=\"user-toggle\" key={z}>\n                    //     <div className=\"switch-container\">\n                    //       <label>\n                    //         <input\n                    //           ref=\"switch\"\n                    //           onChange={k => this.onActionActivateToggle(k, i)}\n                    //           className=\"user-agent\"\n                    //           type=\"checkbox\"\n                    //         />\n                    //         <div>\n                    //           <div />\n                    //         </div>\n                    //       </label>\n                    //     </div>\n                    //   </div>\n                    // )\n                  )\n                  // <div className=\"user-toggle\">\n                  //   <div className=\"switch-container\">\n                  //     <label>\n                  //       <input\n                  //         ref=\"switch\"\n                  //         onClick={() =>\n                  //           this.onActionDeactivateToggle(i)\n                  //         }\n                  //         className=\"user-agent\"\n                  //         type=\"checkbox\"\n                  //       />\n                  //       <div>\n                  //         <div />\n                  //       </div>\n                  //     </label>\n                  //   </div>\n                  // </div>\n                  // ) : (\n                  }\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}