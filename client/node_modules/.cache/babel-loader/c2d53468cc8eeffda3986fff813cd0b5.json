{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\n\nclass index extends Component {\n  componentDidMount() {//Check if there is a token\n    //If there is a token then verify that it is valid\n    //If token is valid then login directly\n    //If not valid token then remove token from local storage\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.login === true ? React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\n\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\n\nexport default connect(mapStateToProps, null)(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js"],"names":["React","Component","Login","App","connect","index","componentDidMount","render","props","login","mapStateToProps","state","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWC,KAAX,KAAqB,IAArB,GAA4B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAsC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CAAP;AACD;;AAV2B;AAa9B;;;;;;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYG;AADd,GAAP;AAGD,CAJD;AAMA;;;;;;;AAMA,eAAeR,OAAO,CACpBM,eADoB,EAEpB,IAFoB,CAAP,CAGbL,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\n\nclass index extends Component {\n  componentDidMount() {\n    //Check if there is a token\n    //If there is a token then verify that it is valid\n    //If token is valid then login directly\n    //If not valid token then remove token from local storage\n  }\n\n  render() {\n    return <div>{this.props.login === true ? <App /> : <Login />}</div>;\n  }\n}\n\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\nexport default connect(\n  mapStateToProps,\n  null\n)(index);\n"]},"metadata":{},"sourceType":"module"}