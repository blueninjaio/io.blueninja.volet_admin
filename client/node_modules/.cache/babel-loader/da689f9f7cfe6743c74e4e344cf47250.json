{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js\";\nimport React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onActionCloseDropdown = () => {\n      let state = this.props.drop;\n\n      if (state === true) {\n        this.props.drop = false;\n      }\n    };\n\n    this.fetchAgents = async () => {\n      fetch(\"\".concat(url, \"/api/agents\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pending = [];\n            business.map(x => x.isPending ? pending.push(x) : null);\n            this.setState({\n              pending\n            });\n          }\n        }\n      }).catch(err => {\n        alert(\"Error connecting to server, fetching all agents in the dashboad page\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchBusinessRequest = async () => {\n      fetch(\"\".concat(url, \"/api/business\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.businesses) {\n            if (data.businesses.length >= 1) {\n              let business = data.businesses;\n              let pendingbusiness = [];\n              business.map(x => x.isPending ? pendingbusiness.push(x) : null);\n              this.setState({\n                pendingbusiness\n              });\n            }\n          }\n        }\n      }).catch(err => {\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllFeedback = () => {\n      fetch(\"\".concat(url, \"/api/feedbacks\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.feedbacks.length >= 1) {\n            let feedback = [];\n            data.feedbacks.map(x => {\n              let user = {\n                _id: x._id,\n                rating: x.rating,\n                description: x.description,\n                dateCreated: x.dateCreated\n              };\n              feedback.push(user);\n              return feedback;\n            });\n            this.setState({\n              feedback\n            });\n          }\n        }\n      }).catch(err => {\n        alert(\"Error connecting to server, fetching the latest feedback on the dashboard page\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllBusiness = () => {\n      fetch(\"\".concat(url, \"/api/category\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.categories.length >= 1) {\n            let business = [];\n            let stats = [];\n            data.categories.map(x => {\n              let statistics = {\n                x: x.title,\n                y: 10\n              };\n              stats.push(statistics);\n              this.setState({\n                stats\n              });\n              return stats;\n            });\n            this.setState({\n              business,\n              businessData: data.businesses\n            });\n          }\n        }\n      }).catch(err => {\n        alert(\"Error connecting to server, fetching all the business information on the dashboard page\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllUsers = () => {\n      fetch(\"\".concat(url, \"/api/users\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.users.length >= 1) {\n            let users = [];\n            data.users.map(x => {\n              let user = {\n                x: x.user_type,\n                y: data.users.length\n              };\n              users.push(user);\n              return users;\n            });\n            this.setState({\n              users\n            });\n          }\n        }\n      }).catch(err => {\n        alert(\"Error connecting to server, fetching all users from the dashboard page\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      pendingbusiness: []\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | run all the functions below on page load\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n    this.fetchBusinessRequest();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Business Types\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      padding: {\n        left: 122,\n        bottom: 122\n      },\n      width: 670,\n      height: 300,\n      domainPadding: 100,\n      style: {\n        parent: {\n          padding: 20,\n          height: 300\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      horizontal: true,\n      cornerRadius: 7,\n      data: this.state.stats,\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"User Vs User Agents\"), React.createElement(VictoryPie, {\n      innerRadius: 200,\n      width: 1000,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 11,\n        y: 40\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Most Recent Feedback \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, this.state.feedback.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/feedback\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, x.rating), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, x.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, x.dateCreated))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Pending Agent Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Approved\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Declined\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, this.state.pending.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/agentrequests\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, x.dateCreated), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, x.idPending ? \"is Pending\" : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, x.isApproved ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Approve\") : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, x.isDeclined ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Decline\") : null))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"Pending Business Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Approved\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"Declined\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, this.state.pendingbusiness.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/businessrequest\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, x.dateCreated), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, x.idPending ? \"is Pending\" : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, x.isApproved ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Approve\") : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, x.isDeclined ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, \"Decline\") : null)))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js"],"names":["React","Component","VictoryPie","VictoryChart","VictoryTheme","VictoryBar","url","index","constructor","props","onActionCloseDropdown","state","drop","fetchAgents","fetch","method","mode","headers","Accept","then","res","json","data","success","agent","length","business","pending","map","x","isPending","push","setState","catch","err","alert","text","onClick","cancelable","fetchBusinessRequest","businesses","pendingbusiness","fetchAllFeedback","feedbacks","feedback","user","_id","rating","description","dateCreated","fetchAllBusiness","categories","stats","statistics","title","y","businessData","fetchAllUsers","users","user_type","businesData","componentDidMount","render","material","left","bottom","parent","padding","height","fill","duration","onLoad","i","history","idPending","isApproved","isDeclined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      pendingbusiness: []\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | run all the functions below on page load\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n    this.fetchBusinessRequest();\n  }\n\n  onActionCloseDropdown = () => {\n    let state = this.props.drop;\n    if (state === true) {\n      this.props.drop = false;\n    }\n  };\n  /**\n  |--------------------------------------------------\n  | fetches all the pending agent requests from the api\n  |--------------------------------------------------\n  */\n  fetchAgents = async () => {\n    fetch(`${url}/api/agents`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pending = [];\n            business.map(x => (x.isPending ? pending.push(x) : null));\n            this.setState({ pending });\n          }\n        }\n      })\n      .catch(err => {\n        alert(\n          \"Error connecting to server, fetching all agents in the dashboad page\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | fetches all the pending business request from the api\n  |--------------------------------------------------\n  */\n  fetchBusinessRequest = async () => {\n    fetch(`${url}/api/business`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.businesses) {\n            if (data.businesses.length >= 1) {\n              let business = data.businesses;\n              let pendingbusiness = [];\n              business.map(x => (x.isPending ? pendingbusiness.push(x) : null));\n\n              this.setState({ pendingbusiness });\n            }\n          }\n        }\n      })\n      .catch(err => {\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | fetches the most recent feedback from the api\n  |--------------------------------------------------\n  */\n  fetchAllFeedback = () => {\n    fetch(`${url}/api/feedbacks`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.feedbacks.length >= 1) {\n            let feedback = [];\n            data.feedbacks.map(x => {\n              let user = {\n                _id: x._id,\n                rating: x.rating,\n                description: x.description,\n                dateCreated: x.dateCreated\n              };\n              feedback.push(user);\n\n              return feedback;\n            });\n\n            this.setState({ feedback });\n          }\n        }\n      })\n      .catch(err => {\n        alert(\n          \"Error connecting to server, fetching the latest feedback on the dashboard page\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | fetches all the business types from the api\n  |--------------------------------------------------\n  */\n  fetchAllBusiness = () => {\n    fetch(`${url}/api/category`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.categories.length >= 1) {\n            let business = [];\n            let stats = [];\n\n            data.categories.map(x => {\n              let statistics = {\n                x: x.title,\n                y: 10\n              };\n\n              stats.push(statistics);\n              this.setState({ stats });\n              return stats;\n            });\n\n            this.setState({ business, businessData: data.businesses });\n          }\n        }\n      })\n      .catch(err => {\n        alert(\n          \"Error connecting to server, fetching all the business information on the dashboard page\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | fetches all the users from the api\n  |--------------------------------------------------\n  */\n  fetchAllUsers = () => {\n    fetch(`${url}/api/users`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.users.length >= 1) {\n            let users = [];\n            data.users.map(x => {\n              let user = {\n                x: x.user_type,\n                y: data.users.length\n              };\n              users.push(user);\n              return users;\n            });\n\n            this.setState({ users });\n          }\n        }\n      })\n      .catch(err => {\n        alert(\n          \"Error connecting to server, fetching all users from the dashboard page\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main-dashboard-container\">\n        <h3 className=\"page-title\">Dashboard</h3>\n        <div className=\"container-fluid\">\n          <div className=\"graph\">\n            <div className=\"graph-container\">\n              <p>Business Types</p>\n              <VictoryChart\n                theme={VictoryTheme.material}\n                padding={{ left: 122, bottom: 122 }}\n                width={670}\n                height={300}\n                domainPadding={100}\n                style={{\n                  parent: {\n                    padding: 20,\n                    height: 300\n                  }\n                }}\n              >\n                <VictoryBar\n                  horizontal\n                  cornerRadius={7}\n                  data={this.state.stats}\n                  style={{\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container\">\n              <p>User Vs User Agents</p>\n              {/* <VictoryChart\n                theme={VictoryTheme.material}\n                width={700}\n                height={300}\n              >\n                <VictoryBar\n                  cornerRadius={10}\n                  data={this.state.users}\n                  style={{\n                    label: {\n                      fontSize: 16\n                    },\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart> */}\n              <VictoryPie\n                innerRadius={200}\n                width={1000}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div>\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"rgb(12,96,250)\" },\n                    parent: { border: \"1px solid #ccc\" }\n                  }}\n                  data={[\n                    { x: 1, y: 2 },\n                    { x: 2, y: 3 },\n                    { x: 3, y: 5 },\n                    { x: 4, y: 4 },\n                    { x: 5, y: 7 }\n                  ]}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div> */}\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryPie\n                innerRadius={200}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div> */}\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Most Recent Feedback </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.feedback.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() => this.props.history.push(\"/feedback\")}\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.rating}</td>\n                      <td>{x.description}</td>\n                      <td>{x.dateCreated}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Agent Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">User</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Approved</th>\n                    <th scope=\"col\">Declined</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.pending.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() => this.props.history.push(\"/agentrequests\")}\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.dateCreated}</td>\n                      <td>{x.idPending ? \"is Pending\" : null}</td>\n                      <td>{x.isApproved ? <button>Approve</button> : null}</td>\n                      <td>{x.isDeclined ? <button>Decline</button> : null}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Business Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">User</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Approved</th>\n                    <th scope=\"col\">Declined</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.pendingbusiness.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() =>\n                        this.props.history.push(\"/businessrequest\")\n                      }\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.dateCreated}</td>\n                      <td>{x.idPending ? \"is Pending\" : null}</td>\n                      <td>{x.isApproved ? <button>Approve</button> : null}</td>\n                      <td>{x.isDeclined ? <button>Decline</button> : null}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}