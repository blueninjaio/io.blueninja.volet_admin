{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport { loginNow } from \"../actions/actions\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../config\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    //Check if there is a token\n    //If there is a token then verify that it is valid\n    //If token is valid then login directly\n    //If not valid token then remove token from local storage\n    let receivedToken = localStorage.getItem(\"user_token\");\n    this.setState({\n      token: receivedToken\n    });\n\n    try {\n      await localStorage.setItem(\"user_token\", receivedToken);\n\n      if (receivedToken !== null) {\n        fetch(\"\".concat(url, \"/api/admin/me\"), {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": \"\".concat(receivedToken),\n            Authorization: \"Bearer \".concat(receivedToken)\n          }\n        }).then(res => res.json()).then(data => {\n          if (data.success === true) {\n            console.log(\"Verification data: \", data.user);\n            alert(data.message);\n            this.props.loginNow();\n          }\n        }).catch(err => console.log(err));\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n\n    if (window.location.reload) {\n      if (receivedToken === null) {\n        this.props.login === false;\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.login === true ? React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\n\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\n\nexport default connect(mapStateToProps, loginNow)(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js"],"names":["React","Component","Login","loginNow","App","connect","url","index","constructor","props","state","token","componentDidMount","receivedToken","localStorage","getItem","setState","setItem","fetch","method","headers","Authorization","then","res","json","data","success","console","log","user","alert","message","catch","err","error","window","location","reload","login","render","mapStateToProps","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,WAApB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC5BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB;AACA;AACA;AACA;AACA,QAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAApB;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEE;AAAT,KAAd;;AAEA,QAAI;AACF,YAAMC,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCJ,aAAnC,CAAN;;AAEA,UAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1BK,QAAAA,KAAK,WAAIZ,GAAJ,oBAAwB;AAC3Ba,UAAAA,MAAM,EAAE,KADmB;AAE3BC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,wCAAqBP,aAArB,CAFO;AAGPQ,YAAAA,aAAa,mBAAYR,aAAZ;AAHN;AAFkB,SAAxB,CAAL,CAQGS,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZ,cAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,IAAI,CAACI,IAAxC;AACAC,YAAAA,KAAK,CAACL,IAAI,CAACM,OAAN,CAAL;AACA,iBAAKtB,KAAL,CAAWN,QAAX;AACD;AACF,SAhBH,EAkBG6B,KAlBH,CAkBSC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAlBhB;AAmBD;AACF,KAxBD,CAwBE,OAAOC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAAmB,kBAAnB;AACD;;AAED,QAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,EAA4B;AAC1B,UAAIxB,aAAa,KAAK,IAAtB,EAA4B;AAC1B,aAAKJ,KAAL,CAAW6B,KAAX,KAAqB,KAArB;AACD;AACF;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAK9B,KAAL,CAAW6B,KAAX,KAAqB,IAArB,GAA4B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAsC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CAAP;AACD;;AAtD2B;AAyD9B;;;;;;;AAKA,MAAME,eAAe,GAAG9B,KAAK,IAAI;AAC/B,SAAO;AACL4B,IAAAA,KAAK,EAAE5B,KAAK,CAAC4B,KAAN,CAAYG;AADd,GAAP;AAGD,CAJD;AAMA;;;;;;;AAMA,eAAepC,OAAO,CACpBmC,eADoB,EAEpBrC,QAFoB,CAAP,CAGbI,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport { loginNow } from \"../actions/actions\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../config\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    //Check if there is a token\n    //If there is a token then verify that it is valid\n    //If token is valid then login directly\n    //If not valid token then remove token from local storage\n    let receivedToken = localStorage.getItem(\"user_token\");\n    this.setState({ token: receivedToken });\n\n    try {\n      await localStorage.setItem(\"user_token\", receivedToken);\n\n      if (receivedToken !== null) {\n        fetch(`${url}/api/admin/me`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": `${receivedToken}`,\n            Authorization: `Bearer ${receivedToken}`\n          }\n        })\n          .then(res => res.json())\n\n          .then(data => {\n            if (data.success === true) {\n              console.log(\"Verification data: \", data.user);\n              alert(data.message);\n              this.props.loginNow();\n            }\n          })\n\n          .catch(err => console.log(err));\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n\n    if (window.location.reload) {\n      if (receivedToken === null) {\n        this.props.login === false;\n      }\n    }\n  }\n\n  render() {\n    return <div>{this.props.login === true ? <App /> : <Login />}</div>;\n  }\n}\n\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\nexport default connect(\n  mapStateToProps,\n  loginNow\n)(index);\n"]},"metadata":{},"sourceType":"module"}