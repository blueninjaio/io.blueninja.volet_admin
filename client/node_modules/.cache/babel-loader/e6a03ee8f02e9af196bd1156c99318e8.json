{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport { loginNow, logoutNow } from \"../actions/actions\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../config\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let receivedToken = localStorage.getItem(\"user_token\");\n    this.setState({\n      token: receivedToken\n    });\n    console.log(receivedToken);\n\n    try {\n      // await localStorage.setItem(\"user_token\", receivedToken);\n      if (receivedToken !== null) {\n        fetch(\"\".concat(url, \"/api/admin/me\"), {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": \"\".concat(receivedToken),\n            Authorization: \"Bearer \".concat(receivedToken)\n          }\n        }).then(res => res.json()).then(data => {\n          console.log(\"Fetching\");\n\n          if (data.success === true) {\n            console.log(\"Verification data: \", data.user);\n            alert(data.message);\n            this.props.loginNow();\n          }\n        }).catch(err => console.log(err));\n      } else if (receivedToken === null) {\n        return React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.login === true ? React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\n\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\n\nexport default connect(mapStateToProps, {\n  loginNow,\n  logoutNow\n})(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/index.js"],"names":["React","Component","Login","loginNow","logoutNow","App","connect","url","index","constructor","props","state","token","componentDidMount","receivedToken","localStorage","getItem","setState","console","log","fetch","method","headers","Authorization","then","res","json","data","success","user","alert","message","catch","err","error","render","login","mapStateToProps","isLoggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,WAApB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAApB;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEE;AAAT,KAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AACA,QAAI;AACF;AAEA,UAAIA,aAAa,KAAK,IAAtB,EAA4B;AAC1BM,QAAAA,KAAK,WAAIb,GAAJ,oBAAwB;AAC3Bc,UAAAA,MAAM,EAAE,KADmB;AAE3BC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,wCAAqBR,aAArB,CAFO;AAGPS,YAAAA,aAAa,mBAAYT,aAAZ;AAHN;AAFkB,SAAxB,CAAL,CAQGU,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,cAAIQ,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBV,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCQ,IAAI,CAACE,IAAxC;AACAC,YAAAA,KAAK,CAACH,IAAI,CAACI,OAAN,CAAL;AACA,iBAAKrB,KAAL,CAAWP,QAAX;AACD;AACF,SAjBH,EAmBG6B,KAnBH,CAmBSC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAnBhB;AAoBD,OArBD,MAqBO,IAAInB,aAAa,KAAK,IAAtB,EAA4B;AACjC,eAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KA3BD,CA2BE,OAAOoB,KAAP,EAAc;AACdhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ,EAAmB,kBAAnB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKzB,KAAL,CAAW0B,KAAX,KAAqB,IAArB,GAA4B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAAsC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CAAP;AACD;;AA/C2B;AAkD9B;;;;;;;AAKA,MAAMC,eAAe,GAAG1B,KAAK,IAAI;AAC/B,SAAO;AACLyB,IAAAA,KAAK,EAAEzB,KAAK,CAACyB,KAAN,CAAYE;AADd,GAAP;AAGD,CAJD;AAMA;;;;;;;AAMA,eAAehC,OAAO,CACpB+B,eADoB,EAEpB;AAAElC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAFoB,CAAP,CAGbI,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Login from \"./Login/index\";\nimport { loginNow, logoutNow } from \"../actions/actions\";\nimport App from \"./App/index\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../config\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let receivedToken = localStorage.getItem(\"user_token\");\n    this.setState({ token: receivedToken });\n    console.log(receivedToken);\n    try {\n      // await localStorage.setItem(\"user_token\", receivedToken);\n\n      if (receivedToken !== null) {\n        fetch(`${url}/api/admin/me`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": `${receivedToken}`,\n            Authorization: `Bearer ${receivedToken}`\n          }\n        })\n          .then(res => res.json())\n\n          .then(data => {\n            console.log(\"Fetching\");\n            if (data.success === true) {\n              console.log(\"Verification data: \", data.user);\n              alert(data.message);\n              this.props.loginNow();\n            }\n          })\n\n          .catch(err => console.log(err));\n      } else if (receivedToken === null) {\n        return <Login />;\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n  }\n\n  render() {\n    return <div>{this.props.login === true ? <App /> : <Login />}</div>;\n  }\n}\n\n/**\n|--------------------------------------------------\n| calls the login state from the login reducer\n|--------------------------------------------------\n*/\nconst mapStateToProps = state => {\n  return {\n    login: state.login.isLoggedIn\n  };\n};\n\n/**\n|--------------------------------------------------\n| connects the state and dispatch to the screen index\n|--------------------------------------------------\n*/\n\nexport default connect(\n  mapStateToProps,\n  { loginNow, logoutNow }\n)(index);\n"]},"metadata":{},"sourceType":"module"}