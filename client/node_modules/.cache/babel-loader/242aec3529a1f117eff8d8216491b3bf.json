{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/Client/io.blueninja.volet_admin/client/src/screens/App/PushNotification/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.passedFromChild = (i, state) => {\n      console.log(i);\n    };\n\n    this.getPush = () => {\n      fetch(\"\".concat(url, \"/api/push\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let notification = [];\n          data.push.map((x, i) => {\n            let user = {\n              no: i,\n              title: x.title,\n              description: x.description,\n              createdAt: x.createdAt\n            };\n            notification.push(user);\n            return notification;\n          });\n          this.setState({\n            notification\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for gettng a push notification page\", err);\n        alert(\"Error connecting to server, fetching the push notification from the push notification page\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      isChecked: false,\n      filterUsers: \"all\",\n      notification: [],\n      sendState: false,\n      sendData: null\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on page loads runs the getPush() function\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.getPush();\n  }\n  /**\n  |--------------------------------------------------\n  | gets the row clicked and the state of the table row\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dashboard-header pn-header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"table-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Notification\"), React.createElement(\"div\", {\n      className: \"filter-users-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control filter-pages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"option\", {\n      value: \"gmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Gmail\"), React.createElement(\"option\", {\n      value: \"fb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Facebook\")))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        paddingTop: \"13rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadPushTable,\n      body: this.state.notification,\n      method: this.passedFromChild,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"send-mail-btn\",\n      onClick: () => this.props.history.push(\"/sendnotification\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"img\",\n      src: \"https://image.flaticon.com/icons/png/512/131/131155.png\",\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/scott/Desktop/Client/io.blueninja.volet_admin/client/src/screens/App/PushNotification/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","passedFromChild","i","state","console","log","getPush","fetch","method","mode","headers","Accept","then","res","json","success","notification","push","map","x","user","no","title","description","createdAt","setState","catch","err","alert","text","onClick","cancelable","isChecked","filterUsers","sendState","sendData","componentDidMount","render","paddingTop","tHeadPushTable","history","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n      filterUsers: \"all\",\n      notification: [],\n      sendState: false,\n      sendData: null\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on page loads runs the getPush() function\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.getPush();\n  }\n\n  /**\n  |--------------------------------------------------\n  | gets the row clicked and the state of the table row\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(i);\n  };\n\n  /**\n  |--------------------------------------------------\n  | gets all push notification from api\n  |--------------------------------------------------\n  */\n  getPush = () => {\n    fetch(`${url}/api/push`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let notification = [];\n          data.push.map((x, i) => {\n            let user = {\n              no: i,\n              title: x.title,\n              description: x.description,\n              createdAt: x.createdAt\n            };\n            notification.push(user);\n            return notification;\n          });\n\n          this.setState({ notification });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for gettng a push notification page\", err);\n\n        alert(\n          \"Error connecting to server, fetching the push notification from the push notification page\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"dashboard-header pn-header-container\">\n          <h3 className=\"table-page-title\">Notification</h3>\n          <div className=\"filter-users-container\">\n            <select className=\"form-control filter-pages\">\n              <option value=\"all\">All</option>\n              <option value=\"email\">Email</option>\n              <option value=\"gmail\">Gmail</option>\n              <option value=\"fb\">Facebook</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"container-fluid\" style={{ paddingTop: \"13rem\" }}>\n          <Table\n            head={data.tHeadPushTable}\n            body={this.state.notification}\n            method={this.passedFromChild}\n          />\n          <button\n            className=\"send-mail-btn\"\n            onClick={() => this.props.history.push(\"/sendnotification\")}\n          >\n            <img\n              alt=\"img\"\n              src=\"https://image.flaticon.com/icons/png/512/131/131155.png\"\n              style={{ height: \"100%\", width: \"100%\" }}\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}