{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/PaymentMethods/index.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLoadFetchPMethods = () => {\n      fetch(\"\".concat(url, \"/api/payment_method\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let payment_methods = [];\n          data.payment_methods.map((x, i) => {\n            let cat = {\n              no: i,\n              title: x.title,\n              date: x.dateCreated\n            };\n            payment_methods.push(cat);\n            return payment_methods;\n          });\n          this.setState({\n            payment_methods\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for business page, for fetching business types\", err);\n        alert(\"Error for business page, for fetching business types\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.passedFromChild = (i, state) => {\n      console.log(i);\n    };\n\n    this.addCategory = async () => {\n      await this.setState({\n        popup: false\n      });\n      fetch(\"\".concat(url, \"/api/category\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          title: this.state.title\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      popup: false,\n      payment_methods: [],\n      name: \"\",\n      description: \"\",\n      ids: []\n    };\n  }\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n\n\n  componentDidMount() {\n    this.onLoadFetchPMethods;\n  }\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-modal-opacity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }) : null, React.createElement(\"h3\", {\n      className: \"main-cat-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Payment Methods\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary add-cat-btn\",\n      onClick: () => this.setState({\n        popup: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://png.pngtree.com/svg/20161118/6fc980719c.svg\",\n      alt: \"add-modal-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), this.state.popup === true ? React.createElement(\"div\", {\n      className: \"cat-popup-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"cat-pop-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Category Title\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control cat-pop-input\",\n      value: this.state.title,\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn cat-save-btn\",\n      onClick: () => this.addCategory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Save\"))) : null, React.createElement(\"div\", {\n      className: \"container-fluid mobile-container\",\n      style: {\n        paddingTop: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Table, {\n      head: data.tHeadPaymentMTable,\n      body: this.state.categories,\n      method: this.passedFromChild,\n      toggle: data.tBodyToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/PaymentMethods/index.js"],"names":["React","Component","Table","data","url","index","constructor","props","onLoadFetchPMethods","fetch","method","mode","headers","Accept","then","res","json","success","payment_methods","map","x","i","cat","no","title","date","dateCreated","push","setState","catch","err","console","log","alert","text","onClick","cancelable","passedFromChild","state","addCategory","popup","body","JSON","stringify","message","window","location","reload","name","description","ids","componentDidMount","render","e","target","value","paddingTop","tHeadPaymentMTable","categories","tBodyToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      popup: false,\n      payment_methods: [],\n      name: \"\",\n      description: \"\",\n      ids: []\n    };\n  }\n\n  /**\n  |--------------------------------------------------\n  | on load page fetches all categories information\n  |--------------------------------------------------\n  */\n  componentDidMount() {\n    this.onLoadFetchPMethods;\n  }\n\n  /**\n  |--------------------------------------------------\n  | fetches all category data from api\n  |--------------------------------------------------\n  */\n  onLoadFetchPMethods = () => {\n    fetch(`${url}/api/payment_method`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let payment_methods = [];\n          data.payment_methods.map((x, i) => {\n            let cat = {\n              no: i,\n              title: x.title,\n              date: x.dateCreated\n            };\n            payment_methods.push(cat);\n            return payment_methods;\n          });\n          this.setState({ payment_methods });\n        }\n      })\n      .catch(err => {\n        console.log(\n          \"Error for business page, for fetching business types\",\n          err\n        );\n\n        alert(\n          \"Error for business page, for fetching business types\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  /**\n  |--------------------------------------------------\n  | method to use the state from the table and the row that is clicked\n  |--------------------------------------------------\n  */\n  passedFromChild = (i, state) => {\n    console.log(i);\n  };\n\n  /**\n  |--------------------------------------------------\n  | add a new category\n  |--------------------------------------------------\n  */\n  addCategory = async () => {\n    await this.setState({ popup: false });\n\n    fetch(`${url}/api/category`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        title: this.state.title\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          window.location.reload();\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n        {this.state.popup === true ? (\n          <div className=\"cat-modal-opacity\" />\n        ) : null}\n        <h3 className=\"main-cat-page-title\">Payment Methods</h3>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary add-cat-btn\"\n          onClick={() => this.setState({ popup: true })}\n        >\n          <img\n            src=\"https://png.pngtree.com/svg/20161118/6fc980719c.svg\"\n            alt=\"add-modal-icon\"\n          />\n        </button>\n        {this.state.popup === true ? (\n          <div className=\"cat-popup-container\">\n            <div>\n              <h3 className=\"cat-pop-title\">Category Title</h3>\n            </div>\n            <div>\n              <input\n                className=\"form-control cat-pop-input\"\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <button\n                className=\"btn cat-save-btn\"\n                onClick={() => this.addCategory()}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"container-fluid mobile-container\"\n          style={{ paddingTop: \"7.5rem\" }}\n        >\n          <Table\n            head={data.tHeadPaymentMTable}\n            body={this.state.categories}\n            method={this.passedFromChild}\n            toggle={data.tBodyToggle}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}