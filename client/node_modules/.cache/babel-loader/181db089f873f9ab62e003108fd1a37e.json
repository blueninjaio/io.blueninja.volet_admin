{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js\";\nimport React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryLine, VictoryTheme, VictoryBar } from \"victory\";\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllBusiness = () => {\n      fetch(\"\".concat(url, \"/api/business\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          console.log(\"data\", data);\n          let business = [];\n          data.businesses.map(x => {\n            let merchant = {\n              f_name: x.f_name,\n              l_name: x.l_name,\n              business_category: x.type_of_business,\n              company_name: x.company_name\n            };\n            business.push(merchant);\n          });\n          this.setState({\n            business,\n            businessData: data.businesses\n          });\n          console.log(this.state.business);\n        }\n      }).catch(err => {\n        console.log(\"Error for business page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      business: [],\n      businesData: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Graph\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: {\n        x: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      horizontal: true,\n      cornerRadius: 10,\n      data: this.state.business.map((x, i) => {\n        x = 10, i = 10;\n      } // { x: x.business_category, y: i }\n      ),\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Graph\"), React.createElement(VictoryPie, {\n      innerRadius: 200,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 11,\n        y: 40\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Graph\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(VictoryLine, {\n      style: {\n        data: {\n          stroke: \"rgb(12,96,250)\"\n        },\n        parent: {\n          border: \"1px solid #ccc\"\n        }\n      },\n      data: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 3\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 4\n      }, {\n        x: 5,\n        y: 7\n      }],\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Graph\"), React.createElement(VictoryPie, {\n      innerRadius: 200,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 11,\n        y: 40\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Graph/Report \"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: {\n        x: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      cornerRadius: 10,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 12,\n        y: 40\n      }, {\n        x: 13,\n        y: 55\n      }, {\n        x: 14,\n        y: 85\n      }, {\n        x: 15,\n        y: 95\n      }, {\n        x: 16,\n        y: 105\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Graph/Report\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: {\n        x: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      horizontal: true,\n      cornerRadius: 10,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 12,\n        y: 40\n      }, {\n        x: 13,\n        y: 55\n      }, {\n        x: 14,\n        y: 85\n      }, {\n        x: 15,\n        y: 95\n      }, {\n        x: 16,\n        y: 105\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js"],"names":["React","Component","VictoryPie","VictoryChart","VictoryLine","VictoryTheme","VictoryBar","Table","data","url","index","constructor","props","fetchAllBusiness","fetch","method","mode","headers","Accept","then","res","json","success","console","log","business","businesses","map","x","merchant","f_name","l_name","business_category","type_of_business","company_name","push","setState","businessData","state","catch","err","alert","text","onClick","cancelable","businesData","componentDidMount","render","material","i","fill","y","duration","onLoad","stroke","parent","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  VictoryPie,\n  VictoryChart,\n  VictoryLine,\n  VictoryTheme,\n  VictoryBar\n} from \"victory\";\n\nimport Table from \"../../../components/Table\";\nimport data from \"../../../data/data.json\";\nimport { url } from \"../../../config\";\n\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      business: [],\n      businesData: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n  }\n\n  fetchAllBusiness = () => {\n    fetch(`${url}/api/business`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          console.log(\"data\", data);\n          let business = [];\n\n          data.businesses.map(x => {\n            let merchant = {\n              f_name: x.f_name,\n              l_name: x.l_name,\n              business_category: x.type_of_business,\n              company_name: x.company_name\n            };\n            business.push(merchant);\n          });\n\n          this.setState({ business, businessData: data.businesses });\n          console.log(this.state.business);\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for business page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main-dashboard-container\">\n        <h3 className=\"page-title\">Dashboard</h3>\n        <div className=\"container-fluid\">\n          <div className=\"graph\">\n            <div className=\"graph-container\">\n              <p>Graph</p>\n              {/* <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"rgb(12,96,250)\" },\n                    parent: { border: \"1px solid #ccc\" }\n                  }}\n                  data={[\n                    { x: 1, y: 2 },\n                    { x: 2, y: 3 },\n                    { x: 3, y: 5 },\n                    { x: 4, y: 4 },\n                    { x: 5, y: 7 }\n                  ]}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart> */}\n              <VictoryChart\n                theme={VictoryTheme.material}\n                domainPadding={{ x: 10 }}\n              >\n                <VictoryBar\n                  horizontal\n                  cornerRadius={10}\n                  data={this.state.business.map(\n                    (x, i) => {\n                      (x = 10), (i = 10);\n                    }\n                    // { x: x.business_category, y: i }\n                  )}\n                  style={{\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryPie\n                innerRadius={200}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div>\n            <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"rgb(12,96,250)\" },\n                    parent: { border: \"1px solid #ccc\" }\n                  }}\n                  data={[\n                    { x: 1, y: 2 },\n                    { x: 2, y: 3 },\n                    { x: 3, y: 5 },\n                    { x: 4, y: 4 },\n                    { x: 5, y: 7 }\n                  ]}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryPie\n                innerRadius={200}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Graph/Report </p>\n              <VictoryChart\n                theme={VictoryTheme.material}\n                domainPadding={{ x: 10 }}\n              >\n                <VictoryBar\n                  cornerRadius={10}\n                  data={[\n                    { x: 11, y: 35 },\n                    { x: 12, y: 40 },\n                    { x: 13, y: 55 },\n                    { x: 14, y: 85 },\n                    { x: 15, y: 95 },\n                    { x: 16, y: 105 }\n                  ]}\n                  style={{\n                    data: {\n                      fill: ({ y }) =>\n                        y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container-2\">\n              <p>Graph/Report</p>\n              <VictoryChart\n                theme={VictoryTheme.material}\n                domainPadding={{ x: 10 }}\n              >\n                <VictoryBar\n                  horizontal\n                  cornerRadius={10}\n                  data={[\n                    { x: 11, y: 35 },\n                    { x: 12, y: 40 },\n                    { x: 13, y: 55 },\n                    { x: 14, y: 85 },\n                    { x: 15, y: 95 },\n                    { x: 16, y: 105 }\n                  ]}\n                  style={{\n                    data: {\n                      fill: ({ y }) =>\n                        y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}