{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js\";\nimport React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.login = async () => {\n      //this.props.getToken(this.state.email, this.state.password);\n      //Fetch to login\n      //Return of fetch if successful will give token\n      //save token then this.props.logMeIn()\n      // return data.message\n      // if (this.state.token !== null) {\n      //   this._storeData(this.state.token);\n      // }\n      fetch(\"\".concat(url, \"/api/admin/login\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          let token = data.token;\n          localStorage.setItem(\"user_token\", token);\n\n          if (token !== null) {\n            this.props.loginNow();\n          }\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      email: \"admin@admin.com\",\n      password: \"admin12345\",\n      token: \"\"\n    };\n  }\n\n  inputEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n    console.log(\"Email:\", this.state.email);\n  }\n\n  inputPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n    console.log(\"Password:\", this.state.password);\n  } // _storeData = async receivedToken => {\n  //   this.setState({ token: receivedToken });\n  //   try {\n  //     await localStorage.setItem(\"user_token\", receivedToken);\n  //     if (receivedToken !== null) {\n  //       fetch(`${url}/api/admin/me`, {\n  //         method: \"GET\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           \"x-access-token\": `${receivedToken}`,\n  //           Authorization: `Bearer ${receivedToken}`\n  //         }\n  //       })\n  //         .then(res => res.json())\n  //         .then(data => {\n  //           if (data.success === true) {\n  //             console.log(\"Verification data: \", data.user);\n  //             alert(data.message);\n  //             this.props.loginNow();\n  //           }\n  //         })\n  //         .catch(err => console.log(err));\n  //     }\n  //   } catch (error) {\n  //     console.log(error, \"this is an error\");\n  //   }\n  // };\n\n  /**\n    |--------------------------------------------------\n    | calls login dispatcher \n    |--------------------------------------------------\n    */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"login-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"input\", {\n      value: this.state.email,\n      onChange: this.inputEmail.bind(this),\n      type: \"email\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.inputPassword.bind(this),\n      type: \"password\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Forgot Password?\")), React.createElement(\"button\", {\n      className: \"login-btn\",\n      onClick: () => this.login(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text go-register-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Don't have an account? \", React.createElement(NavLink, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Sign up\")));\n  }\n\n}\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\n\n\nexport default connect(null, {\n  loginNow,\n  getToken\n})(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js"],"names":["React","Component","loginNow","getToken","connect","url","NavLink","index","constructor","props","login","fetch","method","headers","Accept","body","JSON","stringify","email","state","password","then","res","json","data","success","alert","message","token","localStorage","setItem","catch","err","console","log","inputEmail","e","setState","target","value","inputPassword","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\n\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"admin@admin.com\",\n      password: \"admin12345\",\n      token: \"\"\n    };\n  }\n\n  inputEmail(e) {\n    this.setState({ email: e.target.value });\n    console.log(\"Email:\", this.state.email);\n  }\n\n  inputPassword(e) {\n    this.setState({ password: e.target.value });\n    console.log(\"Password:\", this.state.password);\n  }\n\n  // _storeData = async receivedToken => {\n  //   this.setState({ token: receivedToken });\n  //   try {\n  //     await localStorage.setItem(\"user_token\", receivedToken);\n\n  //     if (receivedToken !== null) {\n  //       fetch(`${url}/api/admin/me`, {\n  //         method: \"GET\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           \"x-access-token\": `${receivedToken}`,\n  //           Authorization: `Bearer ${receivedToken}`\n  //         }\n  //       })\n  //         .then(res => res.json())\n\n  //         .then(data => {\n  //           if (data.success === true) {\n  //             console.log(\"Verification data: \", data.user);\n  //             alert(data.message);\n  //             this.props.loginNow();\n  //           }\n  //         })\n\n  //         .catch(err => console.log(err));\n  //     }\n  //   } catch (error) {\n  //     console.log(error, \"this is an error\");\n  //   }\n  // };\n\n  /**\n    |--------------------------------------------------\n    | calls login dispatcher \n    |--------------------------------------------------\n    */\n  login = async () => {\n    //this.props.getToken(this.state.email, this.state.password);\n\n    //Fetch to login\n    //Return of fetch if successful will give token\n    //save token then this.props.logMeIn()\n    // return data.message\n    // if (this.state.token !== null) {\n    //   this._storeData(this.state.token);\n    // }\n\n    fetch(`${url}/api/admin/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          let token = data.token;\n          localStorage.setItem(\"user_token\", token);\n\n          if (token !== null) {\n            this.props.loginNow();\n          }\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <h2 className=\"login-title\">Login</h2>\n\n        <input\n          value={this.state.email}\n          onChange={this.inputEmail.bind(this)}\n          type=\"email\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter email\"\n        />\n        <input\n          value={this.state.password}\n          onChange={this.inputPassword.bind(this)}\n          type=\"password\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter password\"\n        />\n\n        <NavLink to=\"/forgotpassword\">\n          <small id=\"emailHelp\" className=\"form-text forgot-password-text\">\n            Forgot Password?\n          </small>\n        </NavLink>\n        <button className=\"login-btn\" onClick={() => this.login()}>\n          Login\n        </button>\n\n        <small\n          id=\"emailHelp\"\n          className=\"form-text forgot-password-text go-register-text\"\n        >\n          Don't have an account? <NavLink to=\"/register\">Sign up</NavLink>\n        </small>\n      </div>\n    );\n  }\n}\n\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\nexport default connect(\n  null,\n  { loginNow, getToken }\n)(index);\n"]},"metadata":{},"sourceType":"module"}