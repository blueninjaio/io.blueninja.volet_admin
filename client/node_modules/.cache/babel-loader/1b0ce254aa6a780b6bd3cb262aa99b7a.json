{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js\";\nimport React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAgents = async () => {\n      fetch(\"\".concat(url, \"/api/agents\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          console.log(\"User Agent Stuff:\");\n          console.log(data.agent); // let business = data.agent;\n          // let pending = [];\n          // business.map(x =>\n          //   x.isPending ? pending.push(x) : console.log(\"No Status\")\n          // );\n          // let pendingReceived = [];\n          // pending.map(x => {\n          //   let pend = {\n          //     user_id: x.user_id,\n          //     dateCreated: x.dateCreated,\n          //     isPending: \"is Pending\"\n          //   };\n          //   this.state.ids.push(x.user_id);\n          //   pendingReceived.push(pend);\n          // });\n          // this.setState({ pending: pendingReceived });\n        }\n      }).catch(err => {\n        console.log(\"Error for dashboard page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllFeedback = () => {\n      fetch(\"\".concat(url, \"/api/feedbacks\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let feedback = [];\n          data.feedbacks.map(x => {\n            let user = {\n              _id: x._id,\n              rating: x.rating,\n              description: x.description,\n              dateCreated: x.dateCreated\n            };\n            feedback.push(user);\n          });\n          this.setState({\n            feedback\n          });\n          console.log(this.state.feedback);\n        }\n      }).catch(err => {\n        console.log(\"Error for users page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllBusiness = () => {\n      fetch(\"\".concat(url, \"/api/business\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let business = [];\n          let stats = [];\n          data.businesses.map(x => {\n            let statistics = {\n              x: x.type_of_business,\n              y: x.company_name\n            };\n            stats.push(statistics);\n            this.setState({\n              stats\n            });\n          });\n          this.setState({\n            business,\n            businessData: data.businesses\n          }); // console.log(this.state.business);\n        }\n      }).catch(err => {\n        console.log(\"Error for business page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllUsers = () => {\n      fetch(\"\".concat(url, \"/api/users\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          let users = [];\n          data.users.map(x => {\n            let user = {\n              x: x.user_type,\n              y: data.users.length\n            };\n            users.push(user);\n          });\n          this.setState({\n            users\n          });\n        }\n      }).catch(err => {\n        console.log(\"Error for users page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      business: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Business Types\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      width: 700,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      horizontal: true,\n      cornerRadius: 10,\n      data: this.state.stats,\n      style: {\n        label: {\n          fontSize: 16\n        },\n        data: {\n          fill: ({\n            y\n          }) => y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"User Vs User Agents\"), React.createElement(VictoryPie, {\n      innerRadius: 200,\n      width: 1000,\n      data: this.state.users,\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 3 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Most Recent Feedback \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, this.state.feedback.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, x.rating), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, x.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, x.dateCreated))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Pending Agent Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, this.state.feedback.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, x.rating), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, x.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, x.dateCreated))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Pending Business Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Approved\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Declined\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, this.state.pending.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, x.dateCreated), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, x.status ? \"is Pending\" : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, x.isApproved ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Approve\") : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, x.isDeclined ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Decline\") : null)))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js"],"names":["React","Component","VictoryPie","VictoryChart","VictoryTheme","VictoryBar","url","index","constructor","props","fetchAgents","fetch","method","mode","headers","Accept","then","res","json","data","success","console","log","agent","catch","err","alert","text","onClick","cancelable","fetchAllFeedback","feedback","feedbacks","map","x","user","_id","rating","description","dateCreated","push","setState","state","fetchAllBusiness","business","stats","businesses","statistics","type_of_business","y","company_name","businessData","fetchAllUsers","users","user_type","length","businesData","pending","componentDidMount","render","material","label","fontSize","fill","duration","onLoad","i","status","isApproved","isDeclined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      business: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n  }\n\n  fetchAgents = async () => {\n    fetch(`${url}/api/agents`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          console.log(\"User Agent Stuff:\");\n          console.log(data.agent);\n          // let business = data.agent;\n          // let pending = [];\n          // business.map(x =>\n          //   x.isPending ? pending.push(x) : console.log(\"No Status\")\n          // );\n          // let pendingReceived = [];\n          // pending.map(x => {\n          //   let pend = {\n          //     user_id: x.user_id,\n          //     dateCreated: x.dateCreated,\n          //     isPending: \"is Pending\"\n          //   };\n          //   this.state.ids.push(x.user_id);\n          //   pendingReceived.push(pend);\n          // });\n          // this.setState({ pending: pendingReceived });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for dashboard page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  fetchAllFeedback = () => {\n    fetch(`${url}/api/feedbacks`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let feedback = [];\n          data.feedbacks.map(x => {\n            let user = {\n              _id: x._id,\n              rating: x.rating,\n              description: x.description,\n              dateCreated: x.dateCreated\n            };\n            feedback.push(user);\n          });\n\n          this.setState({ feedback });\n          console.log(this.state.feedback);\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for users page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  fetchAllBusiness = () => {\n    fetch(`${url}/api/business`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let business = [];\n          let stats = [];\n\n          data.businesses.map(x => {\n            let statistics = {\n              x: x.type_of_business,\n              y: x.company_name\n            };\n            stats.push(statistics);\n            this.setState({ stats });\n          });\n\n          this.setState({ business, businessData: data.businesses });\n          // console.log(this.state.business);\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for business page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  fetchAllUsers = () => {\n    fetch(`${url}/api/users`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          let users = [];\n          data.users.map(x => {\n            let user = {\n              x: x.user_type,\n              y: data.users.length\n            };\n            users.push(user);\n          });\n\n          this.setState({ users });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for users page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main-dashboard-container\">\n        <h3 className=\"page-title\">Dashboard</h3>\n        <div className=\"container-fluid\">\n          <div className=\"graph\">\n            <div className=\"graph-container\">\n              <p>Business Types</p>\n              <VictoryChart\n                theme={VictoryTheme.material}\n                width={700}\n                height={300}\n              >\n                <VictoryBar\n                  horizontal\n                  cornerRadius={10}\n                  data={this.state.stats}\n                  style={{\n                    label: {\n                      fontSize: 16\n                    },\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container\">\n              <p>User Vs User Agents</p>\n              {/* <VictoryChart\n                theme={VictoryTheme.material}\n                width={700}\n                height={300}\n              >\n                <VictoryBar\n                  cornerRadius={10}\n                  data={this.state.users}\n                  style={{\n                    label: {\n                      fontSize: 16\n                    },\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart> */}\n              <VictoryPie\n                innerRadius={200}\n                width={1000}\n                data={this.state.users}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 3 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div>\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"rgb(12,96,250)\" },\n                    parent: { border: \"1px solid #ccc\" }\n                  }}\n                  data={[\n                    { x: 1, y: 2 },\n                    { x: 2, y: 3 },\n                    { x: 3, y: 5 },\n                    { x: 4, y: 4 },\n                    { x: 5, y: 7 }\n                  ]}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div> */}\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryPie\n                innerRadius={200}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div> */}\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Most Recent Feedback </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.feedback.map((x, i) => (\n                    <tr key={i}>\n                      <td>{x._id}</td>\n                      <td>{x.rating}</td>\n                      <td>{x.description}</td>\n                      <td>{x.dateCreated}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Agent Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.feedback.map((x, i) => (\n                    <tr key={i}>\n                      <td>{x._id}</td>\n                      <td>{x.rating}</td>\n                      <td>{x.description}</td>\n                      <td>{x.dateCreated}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Business Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">User</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Approved</th>\n                    <th scope=\"col\">Declined</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.pending.map((x, i) => (\n                    <tr key={i}>\n                      <td>{x._id}</td>\n                      <td>{x.dateCreated}</td>\n                      <td>{x.status ? \"is Pending\" : null}</td>\n                      <td>{x.isApproved ? <button>Approve</button> : null}</td>\n                      <td>{x.isDeclined ? <button>Decline</button> : null}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}