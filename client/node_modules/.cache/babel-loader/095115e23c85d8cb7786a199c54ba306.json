{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/SendNotification/index.js\";\nimport React, { Component } from \"react\";\nimport { url } from \"../../../config\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendNotification = () => {\n      console.log(\"Title\", this.state.title);\n      console.log(\"Description\", this.state.desc);\n      fetch(\"\".concat(url, \"/api/push\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          description: this.state.desc\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          this.props.history.push(\"/pushnotification\");\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      buttons: false,\n      title: \"\",\n      desc: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Send Notification\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"send-notification-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"send-notification-title-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control \",\n      placeholder: \"Title\",\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"send-notification-content-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        desc: e.target.value\n      }),\n      onClick: () => this.setState({\n        buttons: true\n      }),\n      placeholder: \"Write here...\",\n      className: \"form-control\",\n      rows: \"15\",\n      style: {\n        resize: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"send-notification-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"send-notification-back-btn\",\n      onClick: () => this.props.history.push(\"/pushnotification\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"back\"), React.createElement(\"button\", {\n      className: \"send-notification-button\",\n      onClick: () => this.sendNotification(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"send notification\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/SendNotification/index.js"],"names":["React","Component","url","index","constructor","props","sendNotification","console","log","state","title","desc","fetch","method","headers","Accept","body","JSON","stringify","description","then","res","json","data","success","alert","message","history","push","catch","err","buttons","render","e","setState","target","value","resize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { url } from \"../../../config\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buttons: false,\n      title: \"\",\n      desc: \"\"\n    };\n  }\n\n  sendNotification = () => {\n    console.log(\"Title\", this.state.title);\n    console.log(\"Description\", this.state.desc);\n\n    fetch(`${url}/api/push`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        description: this.state.desc\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          this.props.history.push(\"/pushnotification\");\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"main-dashboard-container\">\n        <h3 className=\"page-title\">Send Notification</h3>\n        <div className=\"container-fluid\">\n          <div className=\"send-notification-main\">\n            {/* <div className=\"send-notification-sender-header\">\n              <div className=\"send-to-text-container\">\n                <span className=\"send-to-text\">Send to:</span>\n              </div>\n              <div className=\"send-notification-input-container\">\n                <select className=\"form-control send-notification-dropdown\">\n                  <option>All User</option>\n                </select>\n                <input\n                  className=\"form-control send-notification-date\"\n                  placeholder=\"Date\"\n                />\n              </div>\n            </div> */}\n\n            <div className=\"send-notification-title-header\">\n              <input\n                className=\"form-control \"\n                placeholder=\"Title\"\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n            </div>\n\n            <div className=\"send-notification-content-body\">\n              <textarea\n                onChange={e => this.setState({ desc: e.target.value })}\n                onClick={() => this.setState({ buttons: true })}\n                placeholder=\"Write here...\"\n                className=\"form-control\"\n                rows=\"15\"\n                style={{ resize: \"none\" }}\n              />\n              <div className=\"send-notification-button-container\">\n                <button\n                  className=\"send-notification-back-btn\"\n                  onClick={() => this.props.history.push(\"/pushnotification\")}\n                >\n                  back\n                </button>\n                <button\n                  className=\"send-notification-button\"\n                  onClick={() => this.sendNotification()}\n                >\n                  send notification\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}