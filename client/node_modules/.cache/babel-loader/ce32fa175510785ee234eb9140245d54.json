{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js\";\nimport React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAgents = async () => {\n      fetch(\"\".concat(url, \"/api/agents\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          // console.log(\"User Agent Stuff:\");\n          // console.log(data.agent);\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pending = [];\n            business.map(x => x.isPending ? pending.push(x) : console.log(\"No Status\"));\n            console.log(pending);\n            this.setState({\n              pending\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(\"Error for dashboard page\", err); // alert(\n        //   \"Error connecting to server\",\n        //   [{ text: \"OK\", onClick: () => null }],\n        //   { cancelable: false }\n        // );\n      });\n    };\n\n    this.fetchBusinessRequest = async () => {\n      fetch(\"\".concat(url, \"/api/business\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pendingbusiness = [];\n            business.map(x => x.isPending ? pendingbusiness.push(x) : console.log(\"No Status\"));\n            console.log(pendingbusiness);\n            this.setState({\n              pendingbusiness\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(\"Error for dashboard page\", err); // alert(\n        //   \"Error connecting to server\",\n        //   [{ text: \"OK\", onClick: () => null }],\n        //   { cancelable: false }\n        // );\n      });\n    };\n\n    this.fetchAllFeedback = () => {\n      fetch(\"\".concat(url, \"/api/feedbacks\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.feedbacks.length >= 1) {\n            let feedback = [];\n            data.feedbacks.map(x => {\n              let user = {\n                _id: x._id,\n                rating: x.rating,\n                description: x.description,\n                dateCreated: x.dateCreated\n              };\n              feedback.push(user);\n            });\n            this.setState({\n              feedback\n            });\n            console.log(this.state.feedback);\n          }\n        }\n      }).catch(err => {\n        console.log(\"Error for users page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllBusiness = () => {\n      fetch(\"\".concat(url, \"/api/category\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.categories.length >= 1) {\n            let business = [];\n            let stats = [];\n            data.categories.map(x => {\n              console.log(x);\n              let statistics = {\n                x: x.title,\n                y: 10\n              }; // console.log(x.type_of_business);\n\n              stats.push(statistics);\n              this.setState({\n                stats\n              });\n            });\n            this.setState({\n              business,\n              businessData: data.businesses\n            }); // console.log(this.state.business);\n          }\n        }\n      }).catch(err => {\n        console.log(\"Error for business page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.fetchAllUsers = () => {\n      fetch(\"\".concat(url, \"/api/users\"), {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          if (data.users.length >= 1) {\n            let users = [];\n            data.users.map(x => {\n              let user = {\n                x: x.user_type,\n                y: data.users.length\n              };\n              users.push(user);\n            });\n            this.setState({\n              users\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(\"Error for users page\", err);\n        alert(\"Error connecting to server\", [{\n          text: \"OK\",\n          onClick: () => null\n        }], {\n          cancelable: false\n        });\n      });\n    };\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      pendingbusiness: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n    this.fetchBusinessRequest();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-dashboard-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Business Types\"), React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      width: 700,\n      height: 300 // domainPadding={{ x: 12 }}\n      ,\n      domainPadding: 100,\n      style: {\n        axisLabel: {\n          fontSize: 20,\n          padding: 30\n        },\n        parent: {}\n      },\n      fixLabelOverlap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      horizontal: true,\n      cornerRadius: 10,\n      data: this.state.stats,\n      style: {\n        label: {\n          fontSize: 16\n        },\n        data: {\n          fill: ({\n            y\n          }) => y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"User Vs User Agents\"), React.createElement(VictoryPie, {\n      innerRadius: 200,\n      width: 1000,\n      data: [{\n        x: 11,\n        y: 35\n      }, {\n        x: 11,\n        y: 40\n      }],\n      style: {\n        data: {\n          fill: ({\n            y\n          }) => y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n        }\n      },\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 2000\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Most Recent Feedback \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, this.state.feedback.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/feedback\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, x.rating), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, x.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, x.dateCreated))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Pending Agent Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Approved\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, \"Declined\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, this.state.pending.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/agentrequests\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, x.dateCreated), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, x.idPending ? \"is Pending\" : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, x.isApproved ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Approve\") : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, x.isDeclined ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Decline\") : null))))))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graph-container-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Pending Business Requests \"), React.createElement(\"table\", {\n      className: \"table table-bordered table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Approved\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Declined\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, this.state.pendingbusiness.map((x, i) => React.createElement(\"tr\", {\n      key: i,\n      onClick: () => this.props.history.push(\"/businessrequest\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, x._id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, x.dateCreated), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, x.idPending ? \"is Pending\" : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, x.isApproved ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, \"Approve\") : null), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, x.isDeclined ? React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Decline\") : null)))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/App/Dashboard/index.js"],"names":["React","Component","VictoryPie","VictoryChart","VictoryTheme","VictoryBar","url","index","constructor","props","fetchAgents","fetch","method","mode","headers","Accept","then","res","json","data","success","agent","length","business","pending","map","x","isPending","push","console","log","setState","catch","err","fetchBusinessRequest","pendingbusiness","fetchAllFeedback","feedbacks","feedback","user","_id","rating","description","dateCreated","state","alert","text","onClick","cancelable","fetchAllBusiness","categories","stats","statistics","title","y","businessData","businesses","fetchAllUsers","users","user_type","businesData","componentDidMount","render","material","axisLabel","fontSize","padding","parent","label","fill","duration","onLoad","i","history","idPending","isApproved","isDeclined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { VictoryPie, VictoryChart, VictoryTheme, VictoryBar } from \"victory\";\nimport { url } from \"../../../config\";\n\n/**\n|--------------------------------------------------\n| renders the Dashboard page\n|--------------------------------------------------\n*/\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      business: [],\n      businesData: [],\n      stats: [],\n      users: [],\n      feedback: [],\n      pending: [],\n      pendingbusiness: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllBusiness();\n    this.fetchAllUsers();\n    this.fetchAllFeedback();\n    this.fetchAgents();\n    this.fetchBusinessRequest();\n  }\n\n  fetchAgents = async () => {\n    fetch(`${url}/api/agents`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          // console.log(\"User Agent Stuff:\");\n          // console.log(data.agent);\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pending = [];\n            business.map(x =>\n              x.isPending ? pending.push(x) : console.log(\"No Status\")\n            );\n            console.log(pending);\n\n            this.setState({ pending });\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for dashboard page\", err);\n\n        // alert(\n        //   \"Error connecting to server\",\n\n        //   [{ text: \"OK\", onClick: () => null }],\n        //   { cancelable: false }\n        // );\n      });\n  };\n\n  fetchBusinessRequest = async () => {\n    fetch(`${url}/api/business`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.agent.length >= 1) {\n            let business = data.agent;\n            let pendingbusiness = [];\n            business.map(x =>\n              x.isPending ? pendingbusiness.push(x) : console.log(\"No Status\")\n            );\n            console.log(pendingbusiness);\n\n            this.setState({ pendingbusiness });\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for dashboard page\", err);\n\n        // alert(\n        //   \"Error connecting to server\",\n\n        //   [{ text: \"OK\", onClick: () => null }],\n        //   { cancelable: false }\n        // );\n      });\n  };\n\n  fetchAllFeedback = () => {\n    fetch(`${url}/api/feedbacks`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.feedbacks.length >= 1) {\n            let feedback = [];\n            data.feedbacks.map(x => {\n              let user = {\n                _id: x._id,\n                rating: x.rating,\n                description: x.description,\n                dateCreated: x.dateCreated\n              };\n              feedback.push(user);\n            });\n\n            this.setState({ feedback });\n            console.log(this.state.feedback);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for users page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  fetchAllBusiness = () => {\n    fetch(`${url}/api/category`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.categories.length >= 1) {\n            let business = [];\n            let stats = [];\n\n            data.categories.map(x => {\n              console.log(x);\n              let statistics = {\n                x: x.title,\n                y: 10\n              };\n              // console.log(x.type_of_business);\n              stats.push(statistics);\n              this.setState({ stats });\n            });\n\n            this.setState({ business, businessData: data.businesses });\n            // console.log(this.state.business);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for business page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  fetchAllUsers = () => {\n    fetch(`${url}/api/users`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          if (data.users.length >= 1) {\n            let users = [];\n            data.users.map(x => {\n              let user = {\n                x: x.user_type,\n                y: data.users.length\n              };\n              users.push(user);\n            });\n\n            this.setState({ users });\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"Error for users page\", err);\n\n        alert(\n          \"Error connecting to server\",\n\n          [{ text: \"OK\", onClick: () => null }],\n          { cancelable: false }\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main-dashboard-container\">\n        <h3 className=\"page-title\">Dashboard</h3>\n        <div className=\"container-fluid\">\n          <div className=\"graph\">\n            <div className=\"graph-container\">\n              <p>Business Types</p>\n              <VictoryChart\n                theme={VictoryTheme.material}\n                width={700}\n                height={300}\n                // domainPadding={{ x: 12 }}\n                domainPadding={100}\n                style={{\n                  axisLabel: { fontSize: 20, padding: 30 },\n                  parent: {}\n                }}\n                fixLabelOverlap\n              >\n                <VictoryBar\n                  horizontal\n                  cornerRadius={10}\n                  data={this.state.stats}\n                  style={{\n                    label: {\n                      fontSize: 16\n                    },\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div>\n            <div className=\"graph-container\">\n              <p>User Vs User Agents</p>\n              {/* <VictoryChart\n                theme={VictoryTheme.material}\n                width={700}\n                height={300}\n              >\n                <VictoryBar\n                  cornerRadius={10}\n                  data={this.state.users}\n                  style={{\n                    label: {\n                      fontSize: 16\n                    },\n                    data: {\n                      fill: ({ y }) =>\n                        y > 18 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                    }\n                  }}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart> */}\n              <VictoryPie\n                innerRadius={200}\n                width={1000}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div>\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryChart theme={VictoryTheme.material}>\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"rgb(12,96,250)\" },\n                    parent: { border: \"1px solid #ccc\" }\n                  }}\n                  data={[\n                    { x: 1, y: 2 },\n                    { x: 2, y: 3 },\n                    { x: 3, y: 5 },\n                    { x: 4, y: 4 },\n                    { x: 5, y: 7 }\n                  ]}\n                  animate={{\n                    duration: 2000,\n                    onLoad: { duration: 2000 }\n                  }}\n                />\n              </VictoryChart>\n            </div> */}\n            {/* <div className=\"graph-container\">\n              <p>Graph</p>\n              <VictoryPie\n                innerRadius={200}\n                data={[{ x: 11, y: 35 }, { x: 11, y: 40 }]}\n                style={{\n                  data: {\n                    fill: ({ y }) =>\n                      y > 39 ? \"rgb(95,153,252)\" : \"rgb(12,96,250)\"\n                  }\n                }}\n                animate={{\n                  duration: 2000,\n                  onLoad: { duration: 2000 }\n                }}\n              />\n            </div> */}\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Most Recent Feedback </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Description</th>\n                    <th scope=\"col\">Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.feedback.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() => this.props.history.push(\"/feedback\")}\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.rating}</td>\n                      <td>{x.description}</td>\n                      <td>{x.dateCreated}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Agent Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">User</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Approved</th>\n                    <th scope=\"col\">Declined</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.pending.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() => this.props.history.push(\"/agentrequests\")}\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.dateCreated}</td>\n                      <td>{x.idPending ? \"is Pending\" : null}</td>\n                      <td>{x.isApproved ? <button>Approve</button> : null}</td>\n                      <td>{x.isDeclined ? <button>Decline</button> : null}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"graph\">\n            <div className=\"graph-container-2\">\n              <p>Pending Business Requests </p>\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">User</th>\n                    <th scope=\"col\">Date Created</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Approved</th>\n                    <th scope=\"col\">Declined</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.pendingbusiness.map((x, i) => (\n                    <tr\n                      key={i}\n                      onClick={() =>\n                        this.props.history.push(\"/businessrequest\")\n                      }\n                    >\n                      <td>{x._id}</td>\n                      <td>{x.dateCreated}</td>\n                      <td>{x.idPending ? \"is Pending\" : null}</td>\n                      <td>{x.isApproved ? <button>Approve</button> : null}</td>\n                      <td>{x.isDeclined ? <button>Decline</button> : null}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}