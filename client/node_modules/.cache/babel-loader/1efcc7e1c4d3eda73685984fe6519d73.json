{"ast":null,"code":"import { LOGIN, GET_TOKEN, VERIFY_TOKEN } from \"./actionTypes.js\";\nimport { url } from \"../config\";\n/**\n|--------------------------------------------------\n| Login dispatch which changes the login state to true \n|--------------------------------------------------\n*/\n\nexport const loginNow = () => dispatch => {\n  dispatch({\n    type: LOGIN,\n    payload: true\n  });\n};\n/**\n|--------------------------------------------------\n| Logout dispatch which changes the login state to false\n|--------------------------------------------------\n*/\n\nexport const logoutNow = () => dispatch => {\n  dispatch({\n    type: LOGIN,\n    payload: false\n  });\n};\nexport const getToken = (email, password) => dispatch => {\n  fetch(\"\".concat(url, \"/api/admin/login\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.success === true) {\n      alert(data.message);\n      let token = data.token;\n      localStorage.setItem(\"user_token\", token);\n      dispatch({\n        type: GET_TOKEN,\n        payload: token\n      });\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/actions/actions.js"],"names":["LOGIN","GET_TOKEN","VERIFY_TOKEN","url","loginNow","dispatch","type","payload","logoutNow","getToken","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","data","success","alert","message","token","localStorage","setItem","catch","err","console","log"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,YAA3B,QAA+C,kBAA/C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA;;;;;;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,KADC;AAEPO,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CALM;AAOP;;;;;;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAMH,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,KADC;AAEPO,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAME,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBN,QAAQ,IAAI;AACvDO,EAAAA,KAAK,WAAIT,GAAJ,uBAA2B;AAC9BU,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACP,sBAAgB,iCADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFqB;AAM9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,MAAAA,KAAK,EAAEA,KADY;AAEnBC,MAAAA,QAAQ,EAAEA;AAFS,KAAf;AANwB,GAA3B,CAAL,CAWGQ,IAXH,CAWQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXf,EAaGF,IAbH,CAaQG,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBC,MAAAA,KAAK,CAACF,IAAI,CAACG,OAAN,CAAL;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,KAAnC;AAEArB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,SADC;AAEPM,QAAAA,OAAO,EAAEmB;AAFF,OAAD,CAAR;AAID;AACF,GAxBH,EA0BGG,KA1BH,CA0BSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CA1BhB;AA2BD,CA5BM","sourcesContent":["import { LOGIN, GET_TOKEN, VERIFY_TOKEN } from \"./actionTypes.js\";\nimport { url } from \"../config\";\n/**\n|--------------------------------------------------\n| Login dispatch which changes the login state to true \n|--------------------------------------------------\n*/\nexport const loginNow = () => dispatch => {\n  dispatch({\n    type: LOGIN,\n    payload: true\n  });\n};\n\n/**\n|--------------------------------------------------\n| Logout dispatch which changes the login state to false\n|--------------------------------------------------\n*/\n\nexport const logoutNow = () => dispatch => {\n  dispatch({\n    type: LOGIN,\n    payload: false\n  });\n};\n\nexport const getToken = (email, password) => dispatch => {\n  fetch(`${url}/api/admin/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  })\n    .then(res => res.json())\n\n    .then(data => {\n      if (data.success === true) {\n        alert(data.message);\n        let token = data.token;\n        localStorage.setItem(\"user_token\", token);\n\n        dispatch({\n          type: GET_TOKEN,\n          payload: token\n        });\n      }\n    })\n\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}