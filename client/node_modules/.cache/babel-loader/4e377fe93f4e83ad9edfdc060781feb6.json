{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js\";\nimport React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onActionValidateEmail = () => {\n      let email = this.state.email;\n\n      if (email.includes(\"@\")) {\n        console.log(\"Yes\");\n      } else {\n        console.log(\"Please try again\");\n      }\n    };\n\n    this._storeData = async receivedToken => {\n      this.setState({\n        token: receivedToken\n      });\n\n      try {\n        await localStorage.setItem(\"user_token\", receivedToken);\n\n        if (receivedToken !== null) {\n          fetch(\"\".concat(url, \"/api/admin/me\"), {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": \"\".concat(receivedToken),\n              Authorization: \"Bearer \".concat(receivedToken)\n            }\n          }).then(res => res.json()).then(data => {\n            if (data.success === true) {\n              alert(data.message);\n              this.props.loginNow();\n            }\n          }).catch(err => console.log(err));\n        }\n      } catch (error) {\n        console.log(error, \"this is an error\");\n      }\n    };\n\n    this.login = async () => {\n      if (this.state.token !== null) {\n        this._storeData(this.state.token);\n      }\n\n      fetch(\"\".concat(url, \"/api/admin/login\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          console.log(\"Login Data: \", data.user);\n          let token = data.token;\n          let email = data.user.email;\n          let id = data.user._id;\n          console.log(\"token\", token);\n          localStorage.setItem(\"user_token\", token);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_id\", id); // localStorage.setItem(\"user_id\", id);\n\n          if (token !== null) {\n            this.props.loginNow();\n          }\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      token: \"\"\n    };\n  }\n\n  inputEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  inputPassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"login-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"input\", {\n      value: this.state.email,\n      onChange: this.inputEmail.bind(this),\n      type: \"email\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.inputPassword.bind(this),\n      type: \"password\",\n      className: \"form-control login-input\",\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Forgot Password?\")), React.createElement(\"button\", {\n      className: \"login-btn\",\n      onClick: () => this.login(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-password-text go-register-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Don't have an account? \", React.createElement(NavLink, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Sign up\")));\n  }\n\n}\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\n\n\nexport default connect(null, {\n  loginNow,\n  getToken\n})(index);","map":{"version":3,"sources":["/Users/scott/Desktop/io.blueninja.volet_admin/client/src/screens/Login/Login/index.js"],"names":["React","Component","loginNow","getToken","connect","url","NavLink","index","constructor","props","onActionValidateEmail","email","state","includes","console","log","_storeData","receivedToken","setState","token","localStorage","setItem","fetch","method","headers","Authorization","then","res","json","data","success","alert","message","catch","err","error","login","Accept","body","JSON","stringify","password","user","id","_id","inputEmail","e","target","value","inputPassword","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { loginNow, getToken } from \"../../../actions/actions\";\nimport { connect } from \"react-redux\";\nimport { url } from \"../../../config\";\n\nimport { NavLink } from \"react-router-dom\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      token: \"\"\n    };\n  }\n\n  onActionValidateEmail = () => {\n    let email = this.state.email;\n\n    if (email.includes(\"@\")) {\n      console.log(\"Yes\");\n    } else {\n      console.log(\"Please try again\");\n    }\n  };\n\n  inputEmail(e) {\n    this.setState({ email: e.target.value });\n  }\n\n  inputPassword(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  _storeData = async receivedToken => {\n    this.setState({ token: receivedToken });\n    try {\n      await localStorage.setItem(\"user_token\", receivedToken);\n\n      if (receivedToken !== null) {\n        fetch(`${url}/api/admin/me`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": `${receivedToken}`,\n            Authorization: `Bearer ${receivedToken}`\n          }\n        })\n          .then(res => res.json())\n\n          .then(data => {\n            if (data.success === true) {\n              alert(data.message);\n              this.props.loginNow();\n            }\n          })\n\n          .catch(err => console.log(err));\n      }\n    } catch (error) {\n      console.log(error, \"this is an error\");\n    }\n  };\n\n  /**\n    |--------------------------------------------------\n    | calls login dispatcher \n    |--------------------------------------------------\n    */\n  login = async () => {\n    if (this.state.token !== null) {\n      this._storeData(this.state.token);\n    }\n\n    fetch(`${url}/api/admin/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n\n      .then(data => {\n        if (data.success === true) {\n          alert(data.message);\n          console.log(\"Login Data: \", data.user);\n          let token = data.token;\n          let email = data.user.email;\n          let id = data.user._id;\n          console.log(\"token\", token);\n          localStorage.setItem(\"user_token\", token);\n          localStorage.setItem(\"user_email\", email);\n          localStorage.setItem(\"user_id\", id);\n          // localStorage.setItem(\"user_id\", id);\n          if (token !== null) {\n            this.props.loginNow();\n          }\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <h2 className=\"login-title\">Login</h2>\n\n        <input\n          value={this.state.email}\n          onChange={this.inputEmail.bind(this)}\n          type=\"email\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter email\"\n        />\n        <input\n          value={this.state.password}\n          onChange={this.inputPassword.bind(this)}\n          type=\"password\"\n          className=\"form-control login-input\"\n          placeholder=\"Enter password\"\n        />\n\n        <NavLink to=\"/forgotpassword\">\n          <small id=\"emailHelp\" className=\"form-text forgot-password-text\">\n            Forgot Password?\n          </small>\n        </NavLink>\n        <button className=\"login-btn\" onClick={() => this.login()}>\n          Login\n        </button>\n\n        <small\n          id=\"emailHelp\"\n          className=\"form-text forgot-password-text go-register-text\"\n        >\n          Don't have an account? <NavLink to=\"/register\">Sign up</NavLink>\n        </small>\n      </div>\n    );\n  }\n}\n\n/**\n|--------------------------------------------------\n| connects dispatcher to the page\n|--------------------------------------------------\n*/\nexport default connect(\n  null,\n  { loginNow, getToken }\n)(index);\n"]},"metadata":{},"sourceType":"module"}